[build-system]
requires = ["setuptools>=64", "setuptools-scm>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "clustrix"
version = "0.1.1"
authors = [
    {name = "Contextual Dynamics Laboratory", email = "contextualdynamics@gmail.com"},
]
description = "Seamless distributed computing for Python functions"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
keywords = ["distributed-computing", "cluster", "slurm", "kubernetes", "parallel"]
dependencies = [
    "paramiko>=2.7.0",
    "pyyaml>=5.4.0", 
    "cloudpickle>=2.0.0",
    "dill>=0.3.4",
    "click>=8.0.0",
    "requests>=2.25.0",
    "huggingface_hub>=0.16.0",
]

[project.urls]
Homepage = "https://github.com/ContextLab/clustrix"
Repository = "https://github.com/ContextLab/clustrix"
Documentation = "https://clustrix.readthedocs.io"
"Bug Tracker" = "https://github.com/ContextLab/clustrix/issues"

[project.scripts]
clustrix = "clustrix.cli:cli"

[project.optional-dependencies]
widget = [
    "ipywidgets>=7.6.0",
    "jupyter>=1.0", 
    "ipython>=7.0",
]
kubernetes = ["kubernetes>=20.13.0"]
aws = [
    "boto3>=1.26.0",
    "kubernetes>=20.13.0",
]
azure = [
    "azure-identity>=1.12.0",
    "azure-mgmt-containerservice>=20.0.0", 
    "kubernetes>=20.13.0",
]
gcp = [
    "google-cloud-container>=2.15.0",
    "google-auth>=2.15.0",
    "kubernetes>=20.13.0", 
]
cloud = [
    "boto3>=1.26.0",
    "azure-identity>=1.12.0",
    "azure-mgmt-containerservice>=20.0.0",
    "google-cloud-container>=2.15.0", 
    "google-auth>=2.15.0",
    "kubernetes>=20.13.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8", 
    "mypy>=0.812",
    "types-PyYAML",
    "types-requests", 
    "types-paramiko",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "coverage>=6.0",
    "pytest-xdist>=2.0",
    "pytest-mock>=3.0",
    "boto3>=1.26.0",
    "azure-identity>=1.12.0",
    "azure-mgmt-compute>=30.0.0",
    "azure-mgmt-containerservice>=20.0.0",
    "azure-mgmt-resource>=23.0.0",
    "azure-mgmt-network>=25.0.0", 
    "google-cloud-compute>=1.11.0",
    "google-cloud-container>=2.15.0",
    "google-auth>=2.15.0",
    "kubernetes>=20.13.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-wagtail-theme>=6.0.0",
    "sphinx-autodoc-typehints>=1.12",
    "nbsphinx>=0.8",
    "jupyter>=1.0",
    "ipython>=7.0",
]
all = [
    # Widget dependencies
    "ipywidgets>=7.6.0",
    "jupyter>=1.0",
    "ipython>=7.0",
    # Cloud provider dependencies
    "kubernetes>=20.13.0",
    "boto3>=1.26.0", 
    "azure-identity>=1.12.0",
    "azure-mgmt-containerservice>=20.0.0",
    "google-cloud-container>=2.15.0",
    "google-auth>=2.15.0",
    # Development dependencies
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.812",
    # Documentation dependencies
    "sphinx>=4.0",
    "sphinx-wagtail-theme>=6.0.0", 
    "sphinx-autodoc-typehints>=1.12",
    "nbsphinx>=0.8",
]

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["clustrix*"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
follow_imports = "skip"
exclude = [
    "build/",
    "dist/",
    ".venv/",
    "venv/",
    ".git/",
    "__pycache__/",
    ".mypy_cache/",
    ".pytest_cache/",
    "tests/conftest.py",
    "tests/real_world/",
]
# Only check our package files  
files = ["clustrix/"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]