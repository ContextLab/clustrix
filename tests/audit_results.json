{
  "total_files": 125,
  "files_needing_refactoring": 50,
  "refactoring_percentage": 40.0,
  "priority_breakdown": {
    "high": 37,
    "medium": 13,
    "low": 75
  },
  "anti_pattern_totals": {
    "mock_usage": 108,
    "patch_decorators": 475,
    "exec_usage": 0
  },
  "files": [
    {
      "file": "tests/run_real_world_tests.py",
      "error": "invalid syntax (<unknown>, line 303)",
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/test_modern_widget.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_cost_monitoring.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_local_executor.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 66,
            "function": "test_execute_single_success"
          },
          {
            "line": 70,
            "function": "test_func"
          },
          {
            "line": 115,
            "function": "test_execute_parallel_multiple_chunks"
          },
          {
            "line": 118,
            "function": "test_func"
          },
          {
            "line": 259,
            "function": "test_safe_pickle_test_failure"
          },
          {
            "line": 278,
            "function": "test_choose_executor_type_unpicklable_function"
          },
          {
            "line": 384,
            "function": "test_create_with_unpicklable_function"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 7,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_gcp_pricing_simple.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 4,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 123,
            "call": "patch()"
          },
          {
            "line": 134,
            "call": "patch()"
          },
          {
            "line": 190,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 34,
            "usage": "Mock"
          },
          {
            "line": 47,
            "usage": "Mock"
          },
          {
            "line": 48,
            "usage": "Mock"
          },
          {
            "line": 41,
            "usage": "patch"
          },
          {
            "line": 72,
            "usage": "Mock"
          },
          {
            "line": 65,
            "usage": "patch"
          },
          {
            "line": 66,
            "usage": "patch"
          },
          {
            "line": 92,
            "usage": "Mock"
          },
          {
            "line": 85,
            "usage": "patch"
          },
          {
            "line": 86,
            "usage": "patch"
          },
          {
            "line": 104,
            "usage": "patch"
          },
          {
            "line": 123,
            "usage": "patch"
          },
          {
            "line": 117,
            "usage": "patch"
          },
          {
            "line": 134,
            "usage": "patch"
          },
          {
            "line": 141,
            "usage": "patch"
          },
          {
            "line": 153,
            "usage": "patch"
          },
          {
            "line": 154,
            "usage": "patch"
          },
          {
            "line": 170,
            "usage": "patch"
          },
          {
            "line": 171,
            "usage": "patch"
          },
          {
            "line": 190,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 26,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_utils.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 3,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 3,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 3,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 344,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 71,
            "call": "patch()"
          },
          {
            "line": 72,
            "call": "patch()"
          },
          {
            "line": 92,
            "call": "patch()"
          },
          {
            "line": 112,
            "call": "patch()"
          },
          {
            "line": 122,
            "call": "patch()"
          },
          {
            "line": 381,
            "call": "patch()"
          },
          {
            "line": 394,
            "call": "patch()"
          },
          {
            "line": 421,
            "call": "patch()"
          },
          {
            "line": 432,
            "call": "patch()"
          },
          {
            "line": 433,
            "call": "patch()"
          },
          {
            "line": 449,
            "call": "patch()"
          },
          {
            "line": 461,
            "call": "patch()"
          },
          {
            "line": 479,
            "call": "patch()"
          },
          {
            "line": 480,
            "call": "patch()"
          },
          {
            "line": 494,
            "call": "patch()"
          },
          {
            "line": 495,
            "call": "patch()"
          },
          {
            "line": 509,
            "call": "patch()"
          },
          {
            "line": 510,
            "call": "patch()"
          },
          {
            "line": 534,
            "call": "patch()"
          },
          {
            "line": 567,
            "call": "patch()"
          },
          {
            "line": 569,
            "call": "patch()"
          },
          {
            "line": 592,
            "call": "patch()"
          },
          {
            "line": 608,
            "call": "patch()"
          },
          {
            "line": 619,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 71,
            "usage": "patch"
          },
          {
            "line": 72,
            "usage": "patch"
          },
          {
            "line": 95,
            "usage": "Mock"
          },
          {
            "line": 92,
            "usage": "patch"
          },
          {
            "line": 115,
            "usage": "Mock"
          },
          {
            "line": 112,
            "usage": "patch"
          },
          {
            "line": 125,
            "usage": "Mock"
          },
          {
            "line": 122,
            "usage": "patch"
          },
          {
            "line": 346,
            "usage": "Mock"
          },
          {
            "line": 347,
            "usage": "Mock"
          },
          {
            "line": 350,
            "usage": "MagicMock"
          },
          {
            "line": 355,
            "usage": "Mock"
          },
          {
            "line": 356,
            "usage": "Mock"
          },
          {
            "line": 357,
            "usage": "Mock"
          },
          {
            "line": 360,
            "usage": "Mock"
          },
          {
            "line": 384,
            "usage": "Mock"
          },
          {
            "line": 381,
            "usage": "patch"
          },
          {
            "line": 394,
            "usage": "patch"
          },
          {
            "line": 421,
            "usage": "patch"
          },
          {
            "line": 432,
            "usage": "patch"
          },
          {
            "line": 433,
            "usage": "patch"
          },
          {
            "line": 449,
            "usage": "patch"
          },
          {
            "line": 461,
            "usage": "patch"
          },
          {
            "line": 479,
            "usage": "patch"
          },
          {
            "line": 480,
            "usage": "patch"
          },
          {
            "line": 494,
            "usage": "patch"
          },
          {
            "line": 495,
            "usage": "patch"
          },
          {
            "line": 509,
            "usage": "patch"
          },
          {
            "line": 510,
            "usage": "patch"
          },
          {
            "line": 534,
            "usage": "patch"
          },
          {
            "line": 567,
            "usage": "patch"
          },
          {
            "line": 569,
            "usage": "patch"
          },
          {
            "line": 592,
            "usage": "patch"
          },
          {
            "line": 608,
            "usage": "patch"
          },
          {
            "line": 619,
            "usage": "patch"
          }
        ],
        "trivial_computations": [
          {
            "line": 23,
            "function": "test_serialize_deserialize_simple_function"
          },
          {
            "line": 26,
            "function": "test_func"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 65,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_filesystem_hybrid.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 12,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 12,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 12,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 82,
            "call": "patch()"
          },
          {
            "line": 156,
            "call": "patch()"
          },
          {
            "line": 209,
            "call": "patch()"
          },
          {
            "line": 394,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 82,
            "usage": "patch"
          },
          {
            "line": 83,
            "usage": "Mock"
          },
          {
            "line": 84,
            "usage": "Mock"
          },
          {
            "line": 89,
            "usage": "Mock"
          },
          {
            "line": 90,
            "usage": "Mock"
          },
          {
            "line": 91,
            "usage": "Mock"
          },
          {
            "line": 97,
            "usage": "Mock"
          },
          {
            "line": 156,
            "usage": "patch"
          },
          {
            "line": 157,
            "usage": "Mock"
          },
          {
            "line": 209,
            "usage": "patch"
          },
          {
            "line": 210,
            "usage": "Mock"
          },
          {
            "line": 394,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 19,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/conftest.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 36,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 36,
            "usage": "patch"
          },
          {
            "line": 37,
            "usage": "Mock"
          },
          {
            "line": 41,
            "usage": "Mock"
          },
          {
            "line": 45,
            "usage": "Mock"
          },
          {
            "line": 51,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [
          {
            "line": 61,
            "function": "test_func"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 9,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_azure_pricing_integration.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 7,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 7,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 7,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 40,
            "call": "patch()"
          },
          {
            "line": 79,
            "call": "patch()"
          },
          {
            "line": 91,
            "call": "patch()"
          },
          {
            "line": 116,
            "call": "patch()"
          },
          {
            "line": 158,
            "call": "patch()"
          },
          {
            "line": 204,
            "call": "patch()"
          },
          {
            "line": 259,
            "call": "patch()"
          },
          {
            "line": 271,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 44,
            "usage": "Mock"
          },
          {
            "line": 40,
            "usage": "patch"
          },
          {
            "line": 79,
            "usage": "patch"
          },
          {
            "line": 95,
            "usage": "Mock"
          },
          {
            "line": 91,
            "usage": "patch"
          },
          {
            "line": 111,
            "usage": "patch"
          },
          {
            "line": 120,
            "usage": "Mock"
          },
          {
            "line": 116,
            "usage": "patch"
          },
          {
            "line": 150,
            "usage": "patch"
          },
          {
            "line": 151,
            "usage": "patch"
          },
          {
            "line": 162,
            "usage": "Mock"
          },
          {
            "line": 158,
            "usage": "patch"
          },
          {
            "line": 208,
            "usage": "Mock"
          },
          {
            "line": 204,
            "usage": "patch"
          },
          {
            "line": 246,
            "usage": "patch"
          },
          {
            "line": 259,
            "usage": "patch"
          },
          {
            "line": 275,
            "usage": "Mock"
          },
          {
            "line": 271,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 29,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_executor_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 322,
            "function": "test_parallel_job_submission"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 138,
            "function": "test_job_submission_kubernetes"
          },
          {
            "line": 217,
            "function": "test_job_submission_ssh"
          }
        ]
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 2,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/test_aws_pricing_integration.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/test_ssh_utils.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 10,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 10,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 10,
            "import": "from unittest.mock import mock_open"
          }
        ],
        "patch_decorators": [
          {
            "line": 34,
            "call": "patch()"
          },
          {
            "line": 64,
            "call": "patch()"
          },
          {
            "line": 91,
            "call": "patch()"
          },
          {
            "line": 102,
            "call": "patch()"
          },
          {
            "line": 103,
            "call": "patch()"
          },
          {
            "line": 122,
            "call": "patch()"
          },
          {
            "line": 123,
            "call": "patch()"
          },
          {
            "line": 141,
            "call": "patch()"
          },
          {
            "line": 142,
            "call": "patch()"
          },
          {
            "line": 169,
            "call": "patch()"
          },
          {
            "line": 177,
            "call": "patch()"
          },
          {
            "line": 197,
            "call": "patch()"
          },
          {
            "line": 225,
            "call": "patch()"
          },
          {
            "line": 226,
            "call": "patch()"
          },
          {
            "line": 268,
            "call": "patch()"
          },
          {
            "line": 298,
            "call": "patch()"
          },
          {
            "line": 332,
            "call": "patch()"
          },
          {
            "line": 349,
            "call": "patch()"
          },
          {
            "line": 350,
            "call": "patch()"
          },
          {
            "line": 351,
            "call": "patch()"
          },
          {
            "line": 352,
            "call": "patch()"
          },
          {
            "line": 353,
            "call": "patch()"
          },
          {
            "line": 354,
            "call": "patch()"
          },
          {
            "line": 414,
            "call": "patch()"
          },
          {
            "line": 434,
            "call": "patch()"
          },
          {
            "line": 449,
            "call": "patch()"
          },
          {
            "line": 450,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 34,
            "usage": "patch"
          },
          {
            "line": 35,
            "usage": "MagicMock"
          },
          {
            "line": 37,
            "usage": "MagicMock"
          },
          {
            "line": 64,
            "usage": "patch"
          },
          {
            "line": 91,
            "usage": "patch"
          },
          {
            "line": 112,
            "usage": "MagicMock"
          },
          {
            "line": 102,
            "usage": "patch"
          },
          {
            "line": 103,
            "usage": "patch"
          },
          {
            "line": 129,
            "usage": "MagicMock"
          },
          {
            "line": 122,
            "usage": "patch"
          },
          {
            "line": 123,
            "usage": "patch"
          },
          {
            "line": 147,
            "usage": "MagicMock"
          },
          {
            "line": 148,
            "usage": "MagicMock"
          },
          {
            "line": 141,
            "usage": "patch"
          },
          {
            "line": 142,
            "usage": "patch"
          },
          {
            "line": 169,
            "usage": "patch"
          },
          {
            "line": 181,
            "usage": "MagicMock"
          },
          {
            "line": 177,
            "usage": "patch"
          },
          {
            "line": 200,
            "usage": "MagicMock"
          },
          {
            "line": 197,
            "usage": "patch"
          },
          {
            "line": 233,
            "usage": "MagicMock"
          },
          {
            "line": 237,
            "usage": "MagicMock"
          },
          {
            "line": 225,
            "usage": "patch"
          },
          {
            "line": 226,
            "usage": "patch"
          },
          {
            "line": 268,
            "usage": "patch"
          },
          {
            "line": 298,
            "usage": "patch"
          },
          {
            "line": 332,
            "usage": "patch"
          },
          {
            "line": 349,
            "usage": "patch"
          },
          {
            "line": 350,
            "usage": "patch"
          },
          {
            "line": 351,
            "usage": "patch"
          },
          {
            "line": 352,
            "usage": "patch"
          },
          {
            "line": 353,
            "usage": "patch"
          },
          {
            "line": 354,
            "usage": "patch"
          },
          {
            "line": 417,
            "usage": "MagicMock"
          },
          {
            "line": 414,
            "usage": "patch"
          },
          {
            "line": 434,
            "usage": "patch"
          },
          {
            "line": 449,
            "usage": "patch"
          },
          {
            "line": 450,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 68,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_secure_credentials_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 87,
            "function": "test_credential_retrieval_with_op"
          },
          {
            "line": 209,
            "function": "test_validation_credentials_real"
          },
          {
            "line": 316,
            "function": "test_multi_provider_credentials"
          },
          {
            "line": 366,
            "function": "test_complete_authentication_workflow"
          },
          {
            "line": 460,
            "function": "test_credential_injection_workflow"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 5,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_cloud_providers_azure.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 2,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 2,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 2,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 53,
            "call": "patch()"
          },
          {
            "line": 54,
            "call": "patch()"
          },
          {
            "line": 55,
            "call": "patch()"
          },
          {
            "line": 56,
            "call": "patch()"
          },
          {
            "line": 57,
            "call": "patch()"
          },
          {
            "line": 58,
            "call": "patch()"
          },
          {
            "line": 111,
            "call": "patch()"
          },
          {
            "line": 158,
            "call": "patch()"
          },
          {
            "line": 159,
            "call": "patch()"
          },
          {
            "line": 190,
            "call": "patch()"
          },
          {
            "line": 190,
            "call": "patch()"
          },
          {
            "line": 192,
            "call": "patch()"
          },
          {
            "line": 176,
            "call": "patch()"
          },
          {
            "line": 177,
            "call": "patch()"
          },
          {
            "line": 178,
            "call": "patch()"
          },
          {
            "line": 310,
            "call": "patch()"
          },
          {
            "line": 366,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 26,
            "usage": "Mock"
          },
          {
            "line": 27,
            "usage": "Mock"
          },
          {
            "line": 28,
            "usage": "Mock"
          },
          {
            "line": 29,
            "usage": "Mock"
          },
          {
            "line": 30,
            "usage": "Mock"
          },
          {
            "line": 70,
            "usage": "Mock"
          },
          {
            "line": 74,
            "usage": "Mock"
          },
          {
            "line": 75,
            "usage": "Mock"
          },
          {
            "line": 76,
            "usage": "Mock"
          },
          {
            "line": 77,
            "usage": "Mock"
          },
          {
            "line": 53,
            "usage": "patch"
          },
          {
            "line": 54,
            "usage": "patch"
          },
          {
            "line": 55,
            "usage": "patch"
          },
          {
            "line": 56,
            "usage": "patch"
          },
          {
            "line": 57,
            "usage": "patch"
          },
          {
            "line": 58,
            "usage": "patch"
          },
          {
            "line": 111,
            "usage": "patch"
          },
          {
            "line": 158,
            "usage": "patch"
          },
          {
            "line": 159,
            "usage": "patch"
          },
          {
            "line": 183,
            "usage": "Mock"
          },
          {
            "line": 186,
            "usage": "Mock"
          },
          {
            "line": 190,
            "usage": "patch"
          },
          {
            "line": 190,
            "usage": "patch"
          },
          {
            "line": 192,
            "usage": "patch"
          },
          {
            "line": 176,
            "usage": "patch"
          },
          {
            "line": 177,
            "usage": "patch"
          },
          {
            "line": 178,
            "usage": "patch"
          },
          {
            "line": 230,
            "usage": "Mock"
          },
          {
            "line": 271,
            "usage": "patch"
          },
          {
            "line": 275,
            "usage": "Mock"
          },
          {
            "line": 276,
            "usage": "Mock"
          },
          {
            "line": 284,
            "usage": "Mock"
          },
          {
            "line": 291,
            "usage": "Mock"
          },
          {
            "line": 297,
            "usage": "Mock"
          },
          {
            "line": 304,
            "usage": "Mock"
          },
          {
            "line": 310,
            "usage": "patch"
          },
          {
            "line": 338,
            "usage": "patch"
          },
          {
            "line": 348,
            "usage": "patch"
          },
          {
            "line": 360,
            "usage": "Mock"
          },
          {
            "line": 361,
            "usage": "Mock"
          },
          {
            "line": 366,
            "usage": "patch"
          },
          {
            "line": 405,
            "usage": "patch"
          },
          {
            "line": 419,
            "usage": "patch"
          },
          {
            "line": 483,
            "usage": "Mock"
          },
          {
            "line": 521,
            "usage": "Mock"
          },
          {
            "line": 523,
            "usage": "Mock"
          },
          {
            "line": 542,
            "usage": "Mock"
          },
          {
            "line": 557,
            "usage": "Mock"
          },
          {
            "line": 560,
            "usage": "Mock"
          },
          {
            "line": 584,
            "usage": "Mock"
          },
          {
            "line": 624,
            "usage": "Mock"
          },
          {
            "line": 629,
            "usage": "Mock"
          },
          {
            "line": 637,
            "usage": "Mock"
          },
          {
            "line": 643,
            "usage": "Mock"
          },
          {
            "line": 678,
            "usage": "Mock"
          },
          {
            "line": 686,
            "usage": "Mock"
          },
          {
            "line": 720,
            "usage": "Mock"
          },
          {
            "line": 725,
            "usage": "Mock"
          },
          {
            "line": 749,
            "usage": "Mock"
          },
          {
            "line": 854,
            "usage": "Mock"
          },
          {
            "line": 856,
            "usage": "Mock"
          },
          {
            "line": 858,
            "usage": "Mock"
          },
          {
            "line": 860,
            "usage": "Mock"
          },
          {
            "line": 913,
            "usage": "Mock"
          },
          {
            "line": 915,
            "usage": "Mock"
          },
          {
            "line": 917,
            "usage": "Mock"
          },
          {
            "line": 919,
            "usage": "Mock"
          },
          {
            "line": 958,
            "usage": "Mock"
          },
          {
            "line": 968,
            "usage": "Mock"
          },
          {
            "line": 984,
            "usage": "Mock"
          },
          {
            "line": 985,
            "usage": "Mock"
          },
          {
            "line": 988,
            "usage": "Mock"
          },
          {
            "line": 994,
            "usage": "Mock"
          },
          {
            "line": 1012,
            "usage": "Mock"
          },
          {
            "line": 1013,
            "usage": "Mock"
          },
          {
            "line": 1015,
            "usage": "patch"
          },
          {
            "line": 1017,
            "usage": "Mock"
          },
          {
            "line": 1018,
            "usage": "Mock"
          },
          {
            "line": 1024,
            "usage": "Mock"
          },
          {
            "line": 1031,
            "usage": "Mock"
          },
          {
            "line": 1037,
            "usage": "Mock"
          },
          {
            "line": 1043,
            "usage": "Mock"
          },
          {
            "line": 1063,
            "usage": "Mock"
          },
          {
            "line": 1064,
            "usage": "Mock"
          },
          {
            "line": 1066,
            "usage": "Mock"
          },
          {
            "line": 1069,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 106,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_ssh_automation.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 6,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 6,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 6,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 41,
            "call": "patch()"
          },
          {
            "line": 59,
            "call": "patch()"
          },
          {
            "line": 60,
            "call": "patch()"
          },
          {
            "line": 61,
            "call": "patch()"
          },
          {
            "line": 62,
            "call": "patch()"
          },
          {
            "line": 63,
            "call": "patch()"
          },
          {
            "line": 91,
            "call": "patch()"
          },
          {
            "line": 92,
            "call": "patch()"
          },
          {
            "line": 93,
            "call": "patch()"
          },
          {
            "line": 94,
            "call": "patch()"
          },
          {
            "line": 95,
            "call": "patch()"
          },
          {
            "line": 123,
            "call": "patch()"
          },
          {
            "line": 145,
            "call": "patch()"
          },
          {
            "line": 159,
            "call": "patch()"
          },
          {
            "line": 170,
            "call": "patch()"
          },
          {
            "line": 167,
            "call": "patch()"
          },
          {
            "line": 180,
            "call": "patch()"
          },
          {
            "line": 214,
            "call": "patch()"
          },
          {
            "line": 188,
            "call": "patch()"
          },
          {
            "line": 189,
            "call": "patch()"
          },
          {
            "line": 190,
            "call": "patch()"
          },
          {
            "line": 191,
            "call": "patch()"
          },
          {
            "line": 192,
            "call": "patch()"
          },
          {
            "line": 232,
            "call": "patch()"
          },
          {
            "line": 234,
            "call": "patch()"
          },
          {
            "line": 234,
            "call": "patch()"
          },
          {
            "line": 236,
            "call": "patch()"
          },
          {
            "line": 257,
            "call": "patch()"
          },
          {
            "line": 259,
            "call": "patch()"
          },
          {
            "line": 259,
            "call": "patch()"
          },
          {
            "line": 261,
            "call": "patch()"
          },
          {
            "line": 284,
            "call": "patch()"
          },
          {
            "line": 286,
            "call": "patch()"
          },
          {
            "line": 286,
            "call": "patch()"
          },
          {
            "line": 288,
            "call": "patch()"
          },
          {
            "line": 308,
            "call": "patch()"
          },
          {
            "line": 310,
            "call": "patch()"
          },
          {
            "line": 310,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 41,
            "usage": "patch"
          },
          {
            "line": 59,
            "usage": "patch"
          },
          {
            "line": 60,
            "usage": "patch"
          },
          {
            "line": 61,
            "usage": "patch"
          },
          {
            "line": 62,
            "usage": "patch"
          },
          {
            "line": 63,
            "usage": "patch"
          },
          {
            "line": 91,
            "usage": "patch"
          },
          {
            "line": 92,
            "usage": "patch"
          },
          {
            "line": 93,
            "usage": "patch"
          },
          {
            "line": 94,
            "usage": "patch"
          },
          {
            "line": 95,
            "usage": "patch"
          },
          {
            "line": 126,
            "usage": "Mock"
          },
          {
            "line": 123,
            "usage": "patch"
          },
          {
            "line": 148,
            "usage": "Mock"
          },
          {
            "line": 145,
            "usage": "patch"
          },
          {
            "line": 159,
            "usage": "patch"
          },
          {
            "line": 170,
            "usage": "patch"
          },
          {
            "line": 167,
            "usage": "patch"
          },
          {
            "line": 180,
            "usage": "patch"
          },
          {
            "line": 205,
            "usage": "Mock"
          },
          {
            "line": 210,
            "usage": "Mock"
          },
          {
            "line": 214,
            "usage": "patch"
          },
          {
            "line": 188,
            "usage": "patch"
          },
          {
            "line": 189,
            "usage": "patch"
          },
          {
            "line": 190,
            "usage": "patch"
          },
          {
            "line": 191,
            "usage": "patch"
          },
          {
            "line": 192,
            "usage": "patch"
          },
          {
            "line": 232,
            "usage": "patch"
          },
          {
            "line": 234,
            "usage": "patch"
          },
          {
            "line": 234,
            "usage": "patch"
          },
          {
            "line": 236,
            "usage": "patch"
          },
          {
            "line": 257,
            "usage": "patch"
          },
          {
            "line": 259,
            "usage": "patch"
          },
          {
            "line": 259,
            "usage": "patch"
          },
          {
            "line": 261,
            "usage": "patch"
          },
          {
            "line": 284,
            "usage": "patch"
          },
          {
            "line": 286,
            "usage": "patch"
          },
          {
            "line": 286,
            "usage": "patch"
          },
          {
            "line": 288,
            "usage": "patch"
          },
          {
            "line": 308,
            "usage": "patch"
          },
          {
            "line": 310,
            "usage": "patch"
          },
          {
            "line": 310,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 83,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_cloud_providers_gcp.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 3,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 3,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 3,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 47,
            "call": "patch()"
          },
          {
            "line": 48,
            "call": "patch()"
          },
          {
            "line": 49,
            "call": "patch()"
          },
          {
            "line": 50,
            "call": "patch()"
          },
          {
            "line": 87,
            "call": "patch()"
          },
          {
            "line": 107,
            "call": "patch()"
          },
          {
            "line": 117,
            "call": "patch()"
          },
          {
            "line": 118,
            "call": "patch()"
          },
          {
            "line": 119,
            "call": "patch()"
          },
          {
            "line": 120,
            "call": "patch()"
          },
          {
            "line": 141,
            "call": "patch()"
          },
          {
            "line": 142,
            "call": "patch()"
          },
          {
            "line": 169,
            "call": "patch()"
          },
          {
            "line": 169,
            "call": "patch()"
          },
          {
            "line": 158,
            "call": "patch()"
          },
          {
            "line": 159,
            "call": "patch()"
          },
          {
            "line": 239,
            "call": "patch()"
          },
          {
            "line": 221,
            "call": "patch()"
          },
          {
            "line": 222,
            "call": "patch()"
          },
          {
            "line": 271,
            "call": "patch()"
          },
          {
            "line": 292,
            "call": "patch()"
          },
          {
            "line": 283,
            "call": "patch()"
          },
          {
            "line": 722,
            "call": "patch()"
          },
          {
            "line": 723,
            "call": "patch()"
          },
          {
            "line": 754,
            "call": "patch()"
          },
          {
            "line": 755,
            "call": "patch()"
          },
          {
            "line": 773,
            "call": "patch()"
          },
          {
            "line": 774,
            "call": "patch()"
          },
          {
            "line": 798,
            "call": "patch()"
          },
          {
            "line": 799,
            "call": "patch()"
          },
          {
            "line": 830,
            "call": "patch()"
          },
          {
            "line": 831,
            "call": "patch()"
          },
          {
            "line": 858,
            "call": "patch()"
          },
          {
            "line": 858,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 25,
            "usage": "Mock"
          },
          {
            "line": 26,
            "usage": "Mock"
          },
          {
            "line": 56,
            "usage": "Mock"
          },
          {
            "line": 62,
            "usage": "Mock"
          },
          {
            "line": 63,
            "usage": "Mock"
          },
          {
            "line": 47,
            "usage": "patch"
          },
          {
            "line": 48,
            "usage": "patch"
          },
          {
            "line": 49,
            "usage": "patch"
          },
          {
            "line": 50,
            "usage": "patch"
          },
          {
            "line": 87,
            "usage": "patch"
          },
          {
            "line": 107,
            "usage": "patch"
          },
          {
            "line": 125,
            "usage": "Mock"
          },
          {
            "line": 130,
            "usage": "Mock"
          },
          {
            "line": 117,
            "usage": "patch"
          },
          {
            "line": 118,
            "usage": "patch"
          },
          {
            "line": 119,
            "usage": "patch"
          },
          {
            "line": 120,
            "usage": "patch"
          },
          {
            "line": 141,
            "usage": "patch"
          },
          {
            "line": 142,
            "usage": "patch"
          },
          {
            "line": 164,
            "usage": "Mock"
          },
          {
            "line": 169,
            "usage": "patch"
          },
          {
            "line": 169,
            "usage": "patch"
          },
          {
            "line": 172,
            "usage": "Mock"
          },
          {
            "line": 158,
            "usage": "patch"
          },
          {
            "line": 159,
            "usage": "patch"
          },
          {
            "line": 228,
            "usage": "Mock"
          },
          {
            "line": 229,
            "usage": "Mock"
          },
          {
            "line": 235,
            "usage": "Mock"
          },
          {
            "line": 239,
            "usage": "patch"
          },
          {
            "line": 221,
            "usage": "patch"
          },
          {
            "line": 222,
            "usage": "patch"
          },
          {
            "line": 276,
            "usage": "Mock"
          },
          {
            "line": 271,
            "usage": "patch"
          },
          {
            "line": 286,
            "usage": "Mock"
          },
          {
            "line": 292,
            "usage": "patch"
          },
          {
            "line": 283,
            "usage": "patch"
          },
          {
            "line": 338,
            "usage": "patch"
          },
          {
            "line": 354,
            "usage": "patch"
          },
          {
            "line": 373,
            "usage": "Mock"
          },
          {
            "line": 388,
            "usage": "Mock"
          },
          {
            "line": 427,
            "usage": "Mock"
          },
          {
            "line": 445,
            "usage": "Mock"
          },
          {
            "line": 496,
            "usage": "Mock"
          },
          {
            "line": 500,
            "usage": "Mock"
          },
          {
            "line": 505,
            "usage": "Mock"
          },
          {
            "line": 515,
            "usage": "Mock"
          },
          {
            "line": 547,
            "usage": "Mock"
          },
          {
            "line": 549,
            "usage": "Mock"
          },
          {
            "line": 554,
            "usage": "Mock"
          },
          {
            "line": 558,
            "usage": "Mock"
          },
          {
            "line": 586,
            "usage": "Mock"
          },
          {
            "line": 587,
            "usage": "Mock"
          },
          {
            "line": 589,
            "usage": "Mock"
          },
          {
            "line": 615,
            "usage": "Mock"
          },
          {
            "line": 616,
            "usage": "Mock"
          },
          {
            "line": 618,
            "usage": "Mock"
          },
          {
            "line": 728,
            "usage": "Mock"
          },
          {
            "line": 730,
            "usage": "Mock"
          },
          {
            "line": 732,
            "usage": "Mock"
          },
          {
            "line": 734,
            "usage": "Mock"
          },
          {
            "line": 737,
            "usage": "Mock"
          },
          {
            "line": 722,
            "usage": "patch"
          },
          {
            "line": 723,
            "usage": "patch"
          },
          {
            "line": 760,
            "usage": "Mock"
          },
          {
            "line": 754,
            "usage": "patch"
          },
          {
            "line": 755,
            "usage": "patch"
          },
          {
            "line": 779,
            "usage": "Mock"
          },
          {
            "line": 773,
            "usage": "patch"
          },
          {
            "line": 774,
            "usage": "patch"
          },
          {
            "line": 804,
            "usage": "Mock"
          },
          {
            "line": 806,
            "usage": "Mock"
          },
          {
            "line": 808,
            "usage": "Mock"
          },
          {
            "line": 810,
            "usage": "Mock"
          },
          {
            "line": 813,
            "usage": "Mock"
          },
          {
            "line": 798,
            "usage": "patch"
          },
          {
            "line": 799,
            "usage": "patch"
          },
          {
            "line": 836,
            "usage": "Mock"
          },
          {
            "line": 830,
            "usage": "patch"
          },
          {
            "line": 831,
            "usage": "patch"
          },
          {
            "line": 858,
            "usage": "patch"
          },
          {
            "line": 858,
            "usage": "patch"
          },
          {
            "line": 870,
            "usage": "Mock"
          },
          {
            "line": 874,
            "usage": "Mock"
          },
          {
            "line": 889,
            "usage": "Mock"
          },
          {
            "line": 890,
            "usage": "Mock"
          },
          {
            "line": 893,
            "usage": "Mock"
          },
          {
            "line": 901,
            "usage": "Mock"
          },
          {
            "line": 916,
            "usage": "Mock"
          },
          {
            "line": 917,
            "usage": "Mock"
          },
          {
            "line": 923,
            "usage": "Mock"
          },
          {
            "line": 927,
            "usage": "Mock"
          },
          {
            "line": 942,
            "usage": "Mock"
          },
          {
            "line": 944,
            "usage": "Mock"
          },
          {
            "line": 945,
            "usage": "Mock"
          },
          {
            "line": 960,
            "usage": "Mock"
          },
          {
            "line": 962,
            "usage": "Mock"
          },
          {
            "line": 976,
            "usage": "Mock"
          },
          {
            "line": 978,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 135,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_azure_cost_provider.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 4,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 40,
            "call": "patch()"
          },
          {
            "line": 41,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 40,
            "usage": "patch"
          },
          {
            "line": 41,
            "usage": "patch"
          },
          {
            "line": 68,
            "usage": "Mock"
          },
          {
            "line": 90,
            "usage": "Mock"
          },
          {
            "line": 106,
            "usage": "Mock"
          },
          {
            "line": 126,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 11,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_notebook_magic_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 256,
            "function": "test_magic_registration_in_ipython"
          },
          {
            "line": 284,
            "function": "test_cell_magic_execution"
          },
          {
            "line": 415,
            "function": "test_complete_notebook_workflow"
          },
          {
            "line": 495,
            "function": "test_parallel_execution_workflow"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 4,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_github_actions_compat.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 9,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 9,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 205,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 72,
            "call": "patch()"
          },
          {
            "line": 150,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 51,
            "usage": "patch"
          },
          {
            "line": 69,
            "usage": "MagicMock"
          },
          {
            "line": 72,
            "usage": "patch"
          },
          {
            "line": 93,
            "usage": "patch"
          },
          {
            "line": 117,
            "usage": "patch"
          },
          {
            "line": 138,
            "usage": "patch"
          },
          {
            "line": 147,
            "usage": "MagicMock"
          },
          {
            "line": 150,
            "usage": "patch"
          },
          {
            "line": 169,
            "usage": "patch"
          },
          {
            "line": 215,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 15,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_file_packaging.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 11,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 11,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 123,
            "function": "test_package_function_with_filesystem_calls"
          },
          {
            "line": 209,
            "function": "test_execution_script_generation"
          },
          {
            "line": 212,
            "function": "test_func"
          },
          {
            "line": 297,
            "function": "test_metadata_content"
          },
          {
            "line": 300,
            "function": "test_func"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 7,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_real_world_gpu_functionality.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_cloud_providers_gcp_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 79,
            "function": "test_authentication_with_service_account"
          },
          {
            "line": 107,
            "function": "test_list_regions_and_zones"
          },
          {
            "line": 137,
            "function": "test_check_quota_and_limits"
          },
          {
            "line": 164,
            "function": "test_create_and_delete_vm_instance"
          },
          {
            "line": 237,
            "function": "test_create_and_delete_gke_cluster"
          },
          {
            "line": 325,
            "function": "test_storage_operations"
          },
          {
            "line": 392,
            "function": "test_network_operations"
          },
          {
            "line": 501,
            "function": "test_complete_cluster_lifecycle"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 8,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_cloud_providers.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 68,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 68,
            "usage": "patch"
          },
          {
            "line": 70,
            "usage": "MagicMock"
          },
          {
            "line": 74,
            "usage": "MagicMock"
          },
          {
            "line": 75,
            "usage": "MagicMock"
          },
          {
            "line": 76,
            "usage": "MagicMock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 8,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_async_execution.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 182,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 182,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 3,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/test_packaging_integration.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 14,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 14,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 319,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 319,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 4,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/test_auto_install.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 5,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 5,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 28,
            "call": "patch()"
          },
          {
            "line": 36,
            "call": "patch()"
          },
          {
            "line": 44,
            "call": "patch()"
          },
          {
            "line": 51,
            "call": "patch()"
          },
          {
            "line": 58,
            "call": "patch()"
          },
          {
            "line": 65,
            "call": "patch()"
          },
          {
            "line": 72,
            "call": "patch()"
          },
          {
            "line": 79,
            "call": "patch()"
          },
          {
            "line": 93,
            "call": "patch()"
          },
          {
            "line": 101,
            "call": "patch()"
          },
          {
            "line": 102,
            "call": "patch()"
          },
          {
            "line": 120,
            "call": "patch()"
          },
          {
            "line": 115,
            "call": "patch()"
          },
          {
            "line": 128,
            "call": "patch()"
          },
          {
            "line": 129,
            "call": "patch()"
          },
          {
            "line": 130,
            "call": "patch()"
          },
          {
            "line": 157,
            "call": "patch()"
          },
          {
            "line": 158,
            "call": "patch()"
          },
          {
            "line": 159,
            "call": "patch()"
          },
          {
            "line": 178,
            "call": "patch()"
          },
          {
            "line": 179,
            "call": "patch()"
          },
          {
            "line": 180,
            "call": "patch()"
          },
          {
            "line": 197,
            "call": "patch()"
          },
          {
            "line": 198,
            "call": "patch()"
          },
          {
            "line": 199,
            "call": "patch()"
          },
          {
            "line": 213,
            "call": "patch()"
          },
          {
            "line": 214,
            "call": "patch()"
          },
          {
            "line": 215,
            "call": "patch()"
          },
          {
            "line": 235,
            "call": "patch()"
          },
          {
            "line": 228,
            "call": "patch()"
          },
          {
            "line": 229,
            "call": "patch()"
          },
          {
            "line": 245,
            "call": "patch()"
          },
          {
            "line": 257,
            "call": "patch()"
          },
          {
            "line": 265,
            "call": "patch()"
          },
          {
            "line": 275,
            "call": "patch()"
          },
          {
            "line": 283,
            "call": "patch()"
          },
          {
            "line": 291,
            "call": "patch()"
          },
          {
            "line": 402,
            "call": "patch()"
          },
          {
            "line": 397,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 28,
            "usage": "patch"
          },
          {
            "line": 30,
            "usage": "MagicMock"
          },
          {
            "line": 36,
            "usage": "patch"
          },
          {
            "line": 44,
            "usage": "patch"
          },
          {
            "line": 45,
            "usage": "MagicMock"
          },
          {
            "line": 51,
            "usage": "patch"
          },
          {
            "line": 58,
            "usage": "patch"
          },
          {
            "line": 59,
            "usage": "MagicMock"
          },
          {
            "line": 65,
            "usage": "patch"
          },
          {
            "line": 72,
            "usage": "patch"
          },
          {
            "line": 73,
            "usage": "MagicMock"
          },
          {
            "line": 79,
            "usage": "patch"
          },
          {
            "line": 93,
            "usage": "patch"
          },
          {
            "line": 101,
            "usage": "patch"
          },
          {
            "line": 102,
            "usage": "patch"
          },
          {
            "line": 120,
            "usage": "patch"
          },
          {
            "line": 115,
            "usage": "patch"
          },
          {
            "line": 134,
            "usage": "Mock"
          },
          {
            "line": 128,
            "usage": "patch"
          },
          {
            "line": 129,
            "usage": "patch"
          },
          {
            "line": 130,
            "usage": "patch"
          },
          {
            "line": 165,
            "usage": "Mock"
          },
          {
            "line": 157,
            "usage": "patch"
          },
          {
            "line": 158,
            "usage": "patch"
          },
          {
            "line": 159,
            "usage": "patch"
          },
          {
            "line": 178,
            "usage": "patch"
          },
          {
            "line": 179,
            "usage": "patch"
          },
          {
            "line": 180,
            "usage": "patch"
          },
          {
            "line": 197,
            "usage": "patch"
          },
          {
            "line": 198,
            "usage": "patch"
          },
          {
            "line": 199,
            "usage": "patch"
          },
          {
            "line": 213,
            "usage": "patch"
          },
          {
            "line": 214,
            "usage": "patch"
          },
          {
            "line": 215,
            "usage": "patch"
          },
          {
            "line": 235,
            "usage": "patch"
          },
          {
            "line": 228,
            "usage": "patch"
          },
          {
            "line": 229,
            "usage": "patch"
          },
          {
            "line": 245,
            "usage": "patch"
          },
          {
            "line": 257,
            "usage": "patch"
          },
          {
            "line": 265,
            "usage": "patch"
          },
          {
            "line": 275,
            "usage": "patch"
          },
          {
            "line": 283,
            "usage": "patch"
          },
          {
            "line": 291,
            "usage": "patch"
          },
          {
            "line": 400,
            "usage": "Mock"
          },
          {
            "line": 402,
            "usage": "patch"
          },
          {
            "line": 406,
            "usage": "MagicMock"
          },
          {
            "line": 397,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 89,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_dependency_analysis.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 9,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 9,
            "import": "from unittest.mock import mock_open"
          }
        ],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 76,
            "function": "test_analyze_function_with_filesystem_calls"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 3,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/run_refactored_tests.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_widget_fixes.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_pricing_clients.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 5,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 160,
            "call": "patch()"
          },
          {
            "line": 246,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 164,
            "usage": "MagicMock"
          },
          {
            "line": 160,
            "usage": "patch"
          },
          {
            "line": 206,
            "usage": "patch"
          },
          {
            "line": 218,
            "usage": "patch"
          },
          {
            "line": 246,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 10,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_filesystem.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 7,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 7,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 7,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 205,
            "call": "patch()"
          },
          {
            "line": 232,
            "call": "patch()"
          },
          {
            "line": 257,
            "call": "patch()"
          },
          {
            "line": 389,
            "call": "patch()"
          },
          {
            "line": 424,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 209,
            "usage": "MagicMock"
          },
          {
            "line": 213,
            "usage": "MagicMock"
          },
          {
            "line": 205,
            "usage": "patch"
          },
          {
            "line": 235,
            "usage": "MagicMock"
          },
          {
            "line": 239,
            "usage": "MagicMock"
          },
          {
            "line": 232,
            "usage": "patch"
          },
          {
            "line": 260,
            "usage": "MagicMock"
          },
          {
            "line": 265,
            "usage": "MagicMock"
          },
          {
            "line": 257,
            "usage": "patch"
          },
          {
            "line": 389,
            "usage": "patch"
          },
          {
            "line": 424,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 19,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_decorator_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_notebook_magic_extended.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 10,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 10,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 10,
            "import": "from unittest.mock import call"
          }
        ],
        "patch_decorators": [
          {
            "line": 227,
            "call": "patch()"
          },
          {
            "line": 248,
            "call": "patch()"
          },
          {
            "line": 265,
            "call": "patch()"
          },
          {
            "line": 380,
            "call": "patch()"
          },
          {
            "line": 390,
            "call": "patch()"
          },
          {
            "line": 403,
            "call": "patch()"
          },
          {
            "line": 411,
            "call": "patch()"
          },
          {
            "line": 426,
            "call": "patch()"
          },
          {
            "line": 432,
            "call": "patch()"
          },
          {
            "line": 700,
            "call": "patch()"
          },
          {
            "line": 707,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 213,
            "usage": "patch"
          },
          {
            "line": 216,
            "usage": "MagicMock"
          },
          {
            "line": 217,
            "usage": "MagicMock"
          },
          {
            "line": 218,
            "usage": "MagicMock"
          },
          {
            "line": 219,
            "usage": "MagicMock"
          },
          {
            "line": 220,
            "usage": "MagicMock"
          },
          {
            "line": 227,
            "usage": "patch"
          },
          {
            "line": 228,
            "usage": "MagicMock"
          },
          {
            "line": 248,
            "usage": "patch"
          },
          {
            "line": 265,
            "usage": "patch"
          },
          {
            "line": 325,
            "usage": "MagicMock"
          },
          {
            "line": 327,
            "usage": "MagicMock"
          },
          {
            "line": 329,
            "usage": "MagicMock"
          },
          {
            "line": 331,
            "usage": "MagicMock"
          },
          {
            "line": 332,
            "usage": "MagicMock"
          },
          {
            "line": 333,
            "usage": "MagicMock"
          },
          {
            "line": 352,
            "usage": "MagicMock"
          },
          {
            "line": 380,
            "usage": "patch"
          },
          {
            "line": 390,
            "usage": "patch"
          },
          {
            "line": 403,
            "usage": "patch"
          },
          {
            "line": 411,
            "usage": "patch"
          },
          {
            "line": 422,
            "usage": "MagicMock"
          },
          {
            "line": 426,
            "usage": "patch"
          },
          {
            "line": 432,
            "usage": "patch"
          },
          {
            "line": 495,
            "usage": "MagicMock"
          },
          {
            "line": 515,
            "usage": "MagicMock"
          },
          {
            "line": 516,
            "usage": "MagicMock"
          },
          {
            "line": 558,
            "usage": "MagicMock"
          },
          {
            "line": 569,
            "usage": "MagicMock"
          },
          {
            "line": 665,
            "usage": "MagicMock"
          },
          {
            "line": 667,
            "usage": "MagicMock"
          },
          {
            "line": 669,
            "usage": "MagicMock"
          },
          {
            "line": 670,
            "usage": "MagicMock"
          },
          {
            "line": 671,
            "usage": "MagicMock"
          },
          {
            "line": 690,
            "usage": "MagicMock"
          },
          {
            "line": 700,
            "usage": "patch"
          },
          {
            "line": 707,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 51,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_auth_fallbacks_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 231,
            "function": "test_gui_password_fallback"
          },
          {
            "line": 257,
            "function": "test_notebook_widget_fallback"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 2,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_executor_real_standalone.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 131,
            "function": "test_parallel_job_submission"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/test_gcp_cost_provider.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 4,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 40,
            "call": "patch()"
          },
          {
            "line": 41,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 40,
            "usage": "patch"
          },
          {
            "line": 41,
            "usage": "patch"
          },
          {
            "line": 68,
            "usage": "Mock"
          },
          {
            "line": 90,
            "usage": "Mock"
          },
          {
            "line": 105,
            "usage": "Mock"
          },
          {
            "line": 128,
            "usage": "Mock"
          },
          {
            "line": 166,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 12,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_modern_widget_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 7,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 7,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 7,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 174,
            "call": "patch()"
          },
          {
            "line": 175,
            "call": "patch()"
          },
          {
            "line": 176,
            "call": "patch()"
          },
          {
            "line": 192,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 174,
            "usage": "patch"
          },
          {
            "line": 175,
            "usage": "patch"
          },
          {
            "line": 176,
            "usage": "patch"
          },
          {
            "line": 176,
            "usage": "Mock"
          },
          {
            "line": 192,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 12,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_aws_cost_provider_pricing.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 4,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 30,
            "call": "patch()"
          },
          {
            "line": 56,
            "call": "patch()"
          },
          {
            "line": 116,
            "call": "patch()"
          },
          {
            "line": 106,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 34,
            "usage": "Mock"
          },
          {
            "line": 30,
            "usage": "patch"
          },
          {
            "line": 60,
            "usage": "Mock"
          },
          {
            "line": 56,
            "usage": "patch"
          },
          {
            "line": 110,
            "usage": "Mock"
          },
          {
            "line": 116,
            "usage": "patch"
          },
          {
            "line": 106,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 14,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_config.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_cloud_providers_lambda_cloud.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 3,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 3,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 3,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 34,
            "call": "patch()"
          },
          {
            "line": 66,
            "call": "patch()"
          },
          {
            "line": 82,
            "call": "patch()"
          },
          {
            "line": 90,
            "call": "patch()"
          },
          {
            "line": 106,
            "call": "patch()"
          },
          {
            "line": 118,
            "call": "patch()"
          },
          {
            "line": 171,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 23,
            "usage": "Mock"
          },
          {
            "line": 37,
            "usage": "Mock"
          },
          {
            "line": 41,
            "usage": "Mock"
          },
          {
            "line": 34,
            "usage": "patch"
          },
          {
            "line": 69,
            "usage": "Mock"
          },
          {
            "line": 73,
            "usage": "Mock"
          },
          {
            "line": 66,
            "usage": "patch"
          },
          {
            "line": 82,
            "usage": "patch"
          },
          {
            "line": 93,
            "usage": "Mock"
          },
          {
            "line": 97,
            "usage": "Mock"
          },
          {
            "line": 90,
            "usage": "patch"
          },
          {
            "line": 109,
            "usage": "Mock"
          },
          {
            "line": 106,
            "usage": "patch"
          },
          {
            "line": 121,
            "usage": "Mock"
          },
          {
            "line": 118,
            "usage": "patch"
          },
          {
            "line": 132,
            "usage": "Mock"
          },
          {
            "line": 142,
            "usage": "Mock"
          },
          {
            "line": 166,
            "usage": "Mock"
          },
          {
            "line": 171,
            "usage": "patch"
          },
          {
            "line": 206,
            "usage": "Mock"
          },
          {
            "line": 227,
            "usage": "Mock"
          },
          {
            "line": 237,
            "usage": "Mock"
          },
          {
            "line": 250,
            "usage": "Mock"
          },
          {
            "line": 276,
            "usage": "patch"
          },
          {
            "line": 290,
            "usage": "Mock"
          },
          {
            "line": 309,
            "usage": "Mock"
          },
          {
            "line": 339,
            "usage": "Mock"
          },
          {
            "line": 359,
            "usage": "Mock"
          },
          {
            "line": 376,
            "usage": "Mock"
          },
          {
            "line": 401,
            "usage": "Mock"
          },
          {
            "line": 446,
            "usage": "Mock"
          },
          {
            "line": 474,
            "usage": "Mock"
          },
          {
            "line": 507,
            "usage": "Mock"
          },
          {
            "line": 567,
            "usage": "Mock"
          },
          {
            "line": 586,
            "usage": "Mock"
          },
          {
            "line": 614,
            "usage": "Mock"
          },
          {
            "line": 646,
            "usage": "Mock"
          },
          {
            "line": 658,
            "usage": "Mock"
          },
          {
            "line": 682,
            "usage": "Mock"
          },
          {
            "line": 685,
            "usage": "Mock"
          },
          {
            "line": 712,
            "usage": "Mock"
          },
          {
            "line": 714,
            "usage": "Mock"
          },
          {
            "line": 733,
            "usage": "Mock"
          },
          {
            "line": 735,
            "usage": "Mock"
          },
          {
            "line": 752,
            "usage": "Mock"
          },
          {
            "line": 754,
            "usage": "Mock"
          },
          {
            "line": 771,
            "usage": "Mock"
          },
          {
            "line": 773,
            "usage": "Mock"
          },
          {
            "line": 799,
            "usage": "Mock"
          },
          {
            "line": 801,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 60,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_config_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 363,
            "function": "test_kubernetes_configuration_real"
          },
          {
            "line": 442,
            "function": "test_complete_configuration_workflow"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 2,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_secure_credentials.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 7,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 7,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 7,
            "import": "from unittest.mock import call"
          }
        ],
        "patch_decorators": [
          {
            "line": 29,
            "call": "patch()"
          },
          {
            "line": 46,
            "call": "patch()"
          },
          {
            "line": 57,
            "call": "patch()"
          },
          {
            "line": 66,
            "call": "patch()"
          },
          {
            "line": 75,
            "call": "patch()"
          },
          {
            "line": 103,
            "call": "patch()"
          },
          {
            "line": 113,
            "call": "patch()"
          },
          {
            "line": 127,
            "call": "patch()"
          },
          {
            "line": 138,
            "call": "patch()"
          },
          {
            "line": 149,
            "call": "patch()"
          },
          {
            "line": 182,
            "call": "patch()"
          },
          {
            "line": 192,
            "call": "patch()"
          },
          {
            "line": 206,
            "call": "patch()"
          },
          {
            "line": 217,
            "call": "patch()"
          },
          {
            "line": 274,
            "call": "patch()"
          },
          {
            "line": 304,
            "call": "patch()"
          },
          {
            "line": 314,
            "call": "patch()"
          },
          {
            "line": 328,
            "call": "patch()"
          },
          {
            "line": 339,
            "call": "patch()"
          },
          {
            "line": 639,
            "call": "patch()"
          },
          {
            "line": 640,
            "call": "patch()"
          },
          {
            "line": 641,
            "call": "patch()"
          },
          {
            "line": 642,
            "call": "patch()"
          },
          {
            "line": 643,
            "call": "patch()"
          },
          {
            "line": 671,
            "call": "patch()"
          },
          {
            "line": 672,
            "call": "patch()"
          },
          {
            "line": 673,
            "call": "patch()"
          },
          {
            "line": 674,
            "call": "patch()"
          },
          {
            "line": 688,
            "call": "patch()"
          },
          {
            "line": 689,
            "call": "patch()"
          },
          {
            "line": 690,
            "call": "patch()"
          },
          {
            "line": 705,
            "call": "patch()"
          },
          {
            "line": 706,
            "call": "patch()"
          },
          {
            "line": 707,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 32,
            "usage": "Mock"
          },
          {
            "line": 29,
            "usage": "patch"
          },
          {
            "line": 49,
            "usage": "Mock"
          },
          {
            "line": 46,
            "usage": "patch"
          },
          {
            "line": 57,
            "usage": "patch"
          },
          {
            "line": 66,
            "usage": "patch"
          },
          {
            "line": 78,
            "usage": "Mock"
          },
          {
            "line": 75,
            "usage": "patch"
          },
          {
            "line": 103,
            "usage": "patch"
          },
          {
            "line": 116,
            "usage": "Mock"
          },
          {
            "line": 113,
            "usage": "patch"
          },
          {
            "line": 127,
            "usage": "patch"
          },
          {
            "line": 138,
            "usage": "patch"
          },
          {
            "line": 163,
            "usage": "Mock"
          },
          {
            "line": 149,
            "usage": "patch"
          },
          {
            "line": 182,
            "usage": "patch"
          },
          {
            "line": 195,
            "usage": "Mock"
          },
          {
            "line": 192,
            "usage": "patch"
          },
          {
            "line": 206,
            "usage": "patch"
          },
          {
            "line": 220,
            "usage": "Mock"
          },
          {
            "line": 217,
            "usage": "patch"
          },
          {
            "line": 277,
            "usage": "Mock"
          },
          {
            "line": 274,
            "usage": "patch"
          },
          {
            "line": 304,
            "usage": "patch"
          },
          {
            "line": 317,
            "usage": "Mock"
          },
          {
            "line": 314,
            "usage": "patch"
          },
          {
            "line": 328,
            "usage": "patch"
          },
          {
            "line": 339,
            "usage": "patch"
          },
          {
            "line": 359,
            "usage": "patch"
          },
          {
            "line": 379,
            "usage": "patch"
          },
          {
            "line": 387,
            "usage": "patch"
          },
          {
            "line": 402,
            "usage": "patch"
          },
          {
            "line": 403,
            "usage": "patch"
          },
          {
            "line": 413,
            "usage": "patch"
          },
          {
            "line": 432,
            "usage": "patch"
          },
          {
            "line": 440,
            "usage": "patch"
          },
          {
            "line": 455,
            "usage": "patch"
          },
          {
            "line": 456,
            "usage": "patch"
          },
          {
            "line": 466,
            "usage": "patch"
          },
          {
            "line": 483,
            "usage": "patch"
          },
          {
            "line": 484,
            "usage": "patch"
          },
          {
            "line": 498,
            "usage": "patch"
          },
          {
            "line": 499,
            "usage": "patch"
          },
          {
            "line": 509,
            "usage": "patch"
          },
          {
            "line": 526,
            "usage": "patch"
          },
          {
            "line": 533,
            "usage": "patch"
          },
          {
            "line": 549,
            "usage": "patch"
          },
          {
            "line": 550,
            "usage": "patch"
          },
          {
            "line": 564,
            "usage": "patch"
          },
          {
            "line": 565,
            "usage": "patch"
          },
          {
            "line": 575,
            "usage": "patch"
          },
          {
            "line": 594,
            "usage": "patch"
          },
          {
            "line": 604,
            "usage": "patch"
          },
          {
            "line": 625,
            "usage": "patch"
          },
          {
            "line": 650,
            "usage": "Mock"
          },
          {
            "line": 639,
            "usage": "patch"
          },
          {
            "line": 640,
            "usage": "patch"
          },
          {
            "line": 641,
            "usage": "patch"
          },
          {
            "line": 642,
            "usage": "patch"
          },
          {
            "line": 643,
            "usage": "patch"
          },
          {
            "line": 671,
            "usage": "patch"
          },
          {
            "line": 672,
            "usage": "patch"
          },
          {
            "line": 673,
            "usage": "patch"
          },
          {
            "line": 674,
            "usage": "patch"
          },
          {
            "line": 688,
            "usage": "patch"
          },
          {
            "line": 689,
            "usage": "patch"
          },
          {
            "line": 690,
            "usage": "patch"
          },
          {
            "line": 705,
            "usage": "patch"
          },
          {
            "line": 706,
            "usage": "patch"
          },
          {
            "line": 707,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 107,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_executor.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 5,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 25,
            "call": "patch()"
          },
          {
            "line": 45,
            "call": "patch()"
          },
          {
            "line": 79,
            "call": "patch()"
          },
          {
            "line": 107,
            "call": "patch()"
          },
          {
            "line": 128,
            "call": "patch()"
          },
          {
            "line": 129,
            "call": "patch()"
          },
          {
            "line": 130,
            "call": "patch()"
          },
          {
            "line": 132,
            "call": "patch()"
          },
          {
            "line": 133,
            "call": "patch()"
          },
          {
            "line": 190,
            "call": "patch()"
          },
          {
            "line": 191,
            "call": "patch()"
          },
          {
            "line": 192,
            "call": "patch()"
          },
          {
            "line": 194,
            "call": "patch()"
          },
          {
            "line": 195,
            "call": "patch()"
          },
          {
            "line": 241,
            "call": "patch()"
          },
          {
            "line": 242,
            "call": "patch()"
          },
          {
            "line": 243,
            "call": "patch()"
          },
          {
            "line": 245,
            "call": "patch()"
          },
          {
            "line": 246,
            "call": "patch()"
          },
          {
            "line": 296,
            "call": "patch()"
          },
          {
            "line": 297,
            "call": "patch()"
          },
          {
            "line": 633,
            "call": "patch()"
          },
          {
            "line": 634,
            "call": "patch()"
          },
          {
            "line": 651,
            "call": "patch()"
          },
          {
            "line": 683,
            "call": "patch()"
          },
          {
            "line": 684,
            "call": "patch()"
          },
          {
            "line": 685,
            "call": "patch()"
          },
          {
            "line": 686,
            "call": "patch()"
          },
          {
            "line": 708,
            "call": "patch()"
          },
          {
            "line": 709,
            "call": "patch()"
          },
          {
            "line": 710,
            "call": "patch()"
          },
          {
            "line": 711,
            "call": "patch()"
          },
          {
            "line": 737,
            "call": "patch()"
          },
          {
            "line": 738,
            "call": "patch()"
          },
          {
            "line": 739,
            "call": "patch()"
          },
          {
            "line": 740,
            "call": "patch()"
          },
          {
            "line": 757,
            "call": "patch()"
          },
          {
            "line": 758,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 28,
            "usage": "Mock"
          },
          {
            "line": 30,
            "usage": "Mock"
          },
          {
            "line": 25,
            "usage": "patch"
          },
          {
            "line": 53,
            "usage": "Mock"
          },
          {
            "line": 45,
            "usage": "patch"
          },
          {
            "line": 67,
            "usage": "Mock"
          },
          {
            "line": 68,
            "usage": "Mock"
          },
          {
            "line": 82,
            "usage": "Mock"
          },
          {
            "line": 87,
            "usage": "Mock"
          },
          {
            "line": 91,
            "usage": "Mock"
          },
          {
            "line": 79,
            "usage": "patch"
          },
          {
            "line": 107,
            "usage": "patch"
          },
          {
            "line": 145,
            "usage": "Mock"
          },
          {
            "line": 146,
            "usage": "Mock"
          },
          {
            "line": 149,
            "usage": "Mock"
          },
          {
            "line": 165,
            "usage": "Mock"
          },
          {
            "line": 128,
            "usage": "patch"
          },
          {
            "line": 129,
            "usage": "patch"
          },
          {
            "line": 130,
            "usage": "patch"
          },
          {
            "line": 131,
            "usage": "patch"
          },
          {
            "line": 132,
            "usage": "patch"
          },
          {
            "line": 133,
            "usage": "patch"
          },
          {
            "line": 207,
            "usage": "Mock"
          },
          {
            "line": 208,
            "usage": "Mock"
          },
          {
            "line": 211,
            "usage": "Mock"
          },
          {
            "line": 224,
            "usage": "Mock"
          },
          {
            "line": 190,
            "usage": "patch"
          },
          {
            "line": 191,
            "usage": "patch"
          },
          {
            "line": 192,
            "usage": "patch"
          },
          {
            "line": 193,
            "usage": "patch"
          },
          {
            "line": 194,
            "usage": "patch"
          },
          {
            "line": 195,
            "usage": "patch"
          },
          {
            "line": 258,
            "usage": "Mock"
          },
          {
            "line": 259,
            "usage": "Mock"
          },
          {
            "line": 262,
            "usage": "Mock"
          },
          {
            "line": 278,
            "usage": "Mock"
          },
          {
            "line": 241,
            "usage": "patch"
          },
          {
            "line": 242,
            "usage": "patch"
          },
          {
            "line": 243,
            "usage": "patch"
          },
          {
            "line": 244,
            "usage": "patch"
          },
          {
            "line": 245,
            "usage": "patch"
          },
          {
            "line": 246,
            "usage": "patch"
          },
          {
            "line": 304,
            "usage": "Mock"
          },
          {
            "line": 307,
            "usage": "Mock"
          },
          {
            "line": 312,
            "usage": "Mock"
          },
          {
            "line": 296,
            "usage": "patch"
          },
          {
            "line": 297,
            "usage": "patch"
          },
          {
            "line": 337,
            "usage": "Mock"
          },
          {
            "line": 340,
            "usage": "Mock"
          },
          {
            "line": 344,
            "usage": "Mock"
          },
          {
            "line": 357,
            "usage": "Mock"
          },
          {
            "line": 360,
            "usage": "Mock"
          },
          {
            "line": 364,
            "usage": "Mock"
          },
          {
            "line": 372,
            "usage": "Mock"
          },
          {
            "line": 375,
            "usage": "Mock"
          },
          {
            "line": 377,
            "usage": "Mock"
          },
          {
            "line": 393,
            "usage": "Mock"
          },
          {
            "line": 396,
            "usage": "Mock"
          },
          {
            "line": 398,
            "usage": "Mock"
          },
          {
            "line": 409,
            "usage": "Mock"
          },
          {
            "line": 412,
            "usage": "Mock"
          },
          {
            "line": 414,
            "usage": "Mock"
          },
          {
            "line": 425,
            "usage": "Mock"
          },
          {
            "line": 428,
            "usage": "Mock"
          },
          {
            "line": 430,
            "usage": "Mock"
          },
          {
            "line": 441,
            "usage": "Mock"
          },
          {
            "line": 444,
            "usage": "Mock"
          },
          {
            "line": 446,
            "usage": "Mock"
          },
          {
            "line": 457,
            "usage": "Mock"
          },
          {
            "line": 458,
            "usage": "Mock"
          },
          {
            "line": 462,
            "usage": "Mock"
          },
          {
            "line": 464,
            "usage": "Mock"
          },
          {
            "line": 473,
            "usage": "Mock"
          },
          {
            "line": 481,
            "usage": "Mock"
          },
          {
            "line": 482,
            "usage": "Mock"
          },
          {
            "line": 486,
            "usage": "Mock"
          },
          {
            "line": 488,
            "usage": "Mock"
          },
          {
            "line": 501,
            "usage": "Mock"
          },
          {
            "line": 511,
            "usage": "Mock"
          },
          {
            "line": 512,
            "usage": "Mock"
          },
          {
            "line": 515,
            "usage": "Mock"
          },
          {
            "line": 519,
            "usage": "Mock"
          },
          {
            "line": 521,
            "usage": "Mock"
          },
          {
            "line": 529,
            "usage": "Mock"
          },
          {
            "line": 561,
            "usage": "Mock"
          },
          {
            "line": 564,
            "usage": "Mock"
          },
          {
            "line": 568,
            "usage": "Mock"
          },
          {
            "line": 577,
            "usage": "Mock"
          },
          {
            "line": 580,
            "usage": "Mock"
          },
          {
            "line": 584,
            "usage": "Mock"
          },
          {
            "line": 604,
            "usage": "patch"
          },
          {
            "line": 611,
            "usage": "patch"
          },
          {
            "line": 641,
            "usage": "Mock"
          },
          {
            "line": 633,
            "usage": "patch"
          },
          {
            "line": 634,
            "usage": "patch"
          },
          {
            "line": 662,
            "usage": "Mock"
          },
          {
            "line": 651,
            "usage": "patch"
          },
          {
            "line": 679,
            "usage": "patch"
          },
          {
            "line": 695,
            "usage": "Mock"
          },
          {
            "line": 683,
            "usage": "patch"
          },
          {
            "line": 684,
            "usage": "patch"
          },
          {
            "line": 685,
            "usage": "patch"
          },
          {
            "line": 686,
            "usage": "patch"
          },
          {
            "line": 720,
            "usage": "Mock"
          },
          {
            "line": 708,
            "usage": "patch"
          },
          {
            "line": 709,
            "usage": "patch"
          },
          {
            "line": 710,
            "usage": "patch"
          },
          {
            "line": 711,
            "usage": "patch"
          },
          {
            "line": 737,
            "usage": "patch"
          },
          {
            "line": 738,
            "usage": "patch"
          },
          {
            "line": 739,
            "usage": "patch"
          },
          {
            "line": 740,
            "usage": "patch"
          },
          {
            "line": 757,
            "usage": "patch"
          },
          {
            "line": 758,
            "usage": "patch"
          },
          {
            "line": 785,
            "usage": "Mock"
          },
          {
            "line": 786,
            "usage": "Mock"
          },
          {
            "line": 811,
            "usage": "Mock"
          },
          {
            "line": 812,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 159,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_notebook_magic.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 10,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 10,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 189,
            "call": "patch()"
          },
          {
            "line": 263,
            "call": "patch()"
          },
          {
            "line": 479,
            "call": "patch()"
          },
          {
            "line": 488,
            "call": "patch()"
          },
          {
            "line": 489,
            "call": "patch()"
          },
          {
            "line": 504,
            "call": "patch()"
          },
          {
            "line": 518,
            "call": "patch()"
          },
          {
            "line": 518,
            "call": "patch()"
          },
          {
            "line": 520,
            "call": "patch()"
          },
          {
            "line": 522,
            "call": "patch()"
          },
          {
            "line": 675,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 175,
            "usage": "patch"
          },
          {
            "line": 178,
            "usage": "MagicMock"
          },
          {
            "line": 179,
            "usage": "MagicMock"
          },
          {
            "line": 180,
            "usage": "MagicMock"
          },
          {
            "line": 181,
            "usage": "MagicMock"
          },
          {
            "line": 182,
            "usage": "MagicMock"
          },
          {
            "line": 189,
            "usage": "patch"
          },
          {
            "line": 190,
            "usage": "MagicMock"
          },
          {
            "line": 192,
            "usage": "MagicMock"
          },
          {
            "line": 237,
            "usage": "patch"
          },
          {
            "line": 263,
            "usage": "patch"
          },
          {
            "line": 284,
            "usage": "MagicMock"
          },
          {
            "line": 286,
            "usage": "MagicMock"
          },
          {
            "line": 288,
            "usage": "MagicMock"
          },
          {
            "line": 290,
            "usage": "MagicMock"
          },
          {
            "line": 292,
            "usage": "MagicMock"
          },
          {
            "line": 294,
            "usage": "MagicMock"
          },
          {
            "line": 296,
            "usage": "MagicMock"
          },
          {
            "line": 298,
            "usage": "MagicMock"
          },
          {
            "line": 300,
            "usage": "MagicMock"
          },
          {
            "line": 302,
            "usage": "MagicMock"
          },
          {
            "line": 304,
            "usage": "MagicMock"
          },
          {
            "line": 306,
            "usage": "MagicMock"
          },
          {
            "line": 308,
            "usage": "MagicMock"
          },
          {
            "line": 310,
            "usage": "MagicMock"
          },
          {
            "line": 312,
            "usage": "MagicMock"
          },
          {
            "line": 314,
            "usage": "MagicMock"
          },
          {
            "line": 333,
            "usage": "MagicMock"
          },
          {
            "line": 334,
            "usage": "MagicMock"
          },
          {
            "line": 335,
            "usage": "MagicMock"
          },
          {
            "line": 336,
            "usage": "MagicMock"
          },
          {
            "line": 337,
            "usage": "MagicMock"
          },
          {
            "line": 338,
            "usage": "MagicMock"
          },
          {
            "line": 339,
            "usage": "MagicMock"
          },
          {
            "line": 340,
            "usage": "MagicMock"
          },
          {
            "line": 341,
            "usage": "MagicMock"
          },
          {
            "line": 342,
            "usage": "MagicMock"
          },
          {
            "line": 343,
            "usage": "MagicMock"
          },
          {
            "line": 344,
            "usage": "MagicMock"
          },
          {
            "line": 345,
            "usage": "MagicMock"
          },
          {
            "line": 346,
            "usage": "MagicMock"
          },
          {
            "line": 347,
            "usage": "MagicMock"
          },
          {
            "line": 348,
            "usage": "MagicMock"
          },
          {
            "line": 349,
            "usage": "MagicMock"
          },
          {
            "line": 350,
            "usage": "MagicMock"
          },
          {
            "line": 447,
            "usage": "MagicMock"
          },
          {
            "line": 448,
            "usage": "MagicMock"
          },
          {
            "line": 479,
            "usage": "patch"
          },
          {
            "line": 488,
            "usage": "patch"
          },
          {
            "line": 489,
            "usage": "patch"
          },
          {
            "line": 504,
            "usage": "patch"
          },
          {
            "line": 505,
            "usage": "MagicMock"
          },
          {
            "line": 518,
            "usage": "patch"
          },
          {
            "line": 518,
            "usage": "patch"
          },
          {
            "line": 520,
            "usage": "patch"
          },
          {
            "line": 522,
            "usage": "patch"
          },
          {
            "line": 526,
            "usage": "MagicMock"
          },
          {
            "line": 600,
            "usage": "MagicMock"
          },
          {
            "line": 604,
            "usage": "MagicMock"
          },
          {
            "line": 605,
            "usage": "MagicMock"
          },
          {
            "line": 607,
            "usage": "MagicMock"
          },
          {
            "line": 609,
            "usage": "MagicMock"
          },
          {
            "line": 611,
            "usage": "MagicMock"
          },
          {
            "line": 613,
            "usage": "MagicMock"
          },
          {
            "line": 615,
            "usage": "MagicMock"
          },
          {
            "line": 617,
            "usage": "MagicMock"
          },
          {
            "line": 619,
            "usage": "MagicMock"
          },
          {
            "line": 621,
            "usage": "MagicMock"
          },
          {
            "line": 623,
            "usage": "MagicMock"
          },
          {
            "line": 625,
            "usage": "MagicMock"
          },
          {
            "line": 627,
            "usage": "MagicMock"
          },
          {
            "line": 629,
            "usage": "MagicMock"
          },
          {
            "line": 631,
            "usage": "MagicMock"
          },
          {
            "line": 634,
            "usage": "MagicMock"
          },
          {
            "line": 675,
            "usage": "patch"
          },
          {
            "line": 716,
            "usage": "MagicMock"
          },
          {
            "line": 718,
            "usage": "MagicMock"
          },
          {
            "line": 720,
            "usage": "MagicMock"
          },
          {
            "line": 722,
            "usage": "MagicMock"
          },
          {
            "line": 724,
            "usage": "MagicMock"
          },
          {
            "line": 726,
            "usage": "MagicMock"
          },
          {
            "line": 728,
            "usage": "MagicMock"
          },
          {
            "line": 730,
            "usage": "MagicMock"
          },
          {
            "line": 732,
            "usage": "MagicMock"
          },
          {
            "line": 734,
            "usage": "MagicMock"
          },
          {
            "line": 736,
            "usage": "MagicMock"
          },
          {
            "line": 738,
            "usage": "MagicMock"
          },
          {
            "line": 740,
            "usage": "MagicMock"
          },
          {
            "line": 742,
            "usage": "MagicMock"
          },
          {
            "line": 744,
            "usage": "MagicMock"
          },
          {
            "line": 746,
            "usage": "MagicMock"
          },
          {
            "line": 748,
            "usage": "MagicMock"
          },
          {
            "line": 750,
            "usage": "MagicMock"
          },
          {
            "line": 751,
            "usage": "MagicMock"
          },
          {
            "line": 790,
            "usage": "MagicMock"
          },
          {
            "line": 792,
            "usage": "MagicMock"
          },
          {
            "line": 794,
            "usage": "MagicMock"
          },
          {
            "line": 796,
            "usage": "MagicMock"
          },
          {
            "line": 798,
            "usage": "MagicMock"
          },
          {
            "line": 800,
            "usage": "MagicMock"
          },
          {
            "line": 802,
            "usage": "MagicMock"
          },
          {
            "line": 804,
            "usage": "MagicMock"
          },
          {
            "line": 806,
            "usage": "MagicMock"
          },
          {
            "line": 808,
            "usage": "MagicMock"
          },
          {
            "line": 810,
            "usage": "MagicMock"
          },
          {
            "line": 812,
            "usage": "MagicMock"
          },
          {
            "line": 814,
            "usage": "MagicMock"
          },
          {
            "line": 816,
            "usage": "MagicMock"
          },
          {
            "line": 818,
            "usage": "MagicMock"
          },
          {
            "line": 820,
            "usage": "MagicMock"
          },
          {
            "line": 822,
            "usage": "MagicMock"
          },
          {
            "line": 823,
            "usage": "MagicMock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 125,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_auth_fallbacks.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 5,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 33,
            "call": "patch()"
          },
          {
            "line": 45,
            "call": "patch()"
          },
          {
            "line": 61,
            "call": "patch()"
          },
          {
            "line": 62,
            "call": "patch()"
          },
          {
            "line": 79,
            "call": "patch()"
          },
          {
            "line": 80,
            "call": "patch()"
          },
          {
            "line": 97,
            "call": "patch()"
          },
          {
            "line": 92,
            "call": "patch()"
          },
          {
            "line": 107,
            "call": "patch()"
          },
          {
            "line": 108,
            "call": "patch()"
          },
          {
            "line": 109,
            "call": "patch()"
          },
          {
            "line": 110,
            "call": "patch()"
          },
          {
            "line": 111,
            "call": "patch()"
          },
          {
            "line": 112,
            "call": "patch()"
          },
          {
            "line": 113,
            "call": "patch()"
          },
          {
            "line": 143,
            "call": "patch()"
          },
          {
            "line": 152,
            "call": "patch()"
          },
          {
            "line": 177,
            "call": "patch()"
          },
          {
            "line": 211,
            "call": "patch()"
          },
          {
            "line": 224,
            "call": "patch()"
          },
          {
            "line": 234,
            "call": "patch()"
          },
          {
            "line": 235,
            "call": "patch()"
          },
          {
            "line": 246,
            "call": "patch()"
          },
          {
            "line": 247,
            "call": "patch()"
          },
          {
            "line": 248,
            "call": "patch()"
          },
          {
            "line": 262,
            "call": "patch()"
          },
          {
            "line": 263,
            "call": "patch()"
          },
          {
            "line": 274,
            "call": "patch()"
          },
          {
            "line": 275,
            "call": "patch()"
          },
          {
            "line": 287,
            "call": "patch()"
          },
          {
            "line": 288,
            "call": "patch()"
          },
          {
            "line": 298,
            "call": "patch()"
          },
          {
            "line": 299,
            "call": "patch()"
          },
          {
            "line": 310,
            "call": "patch()"
          },
          {
            "line": 311,
            "call": "patch()"
          },
          {
            "line": 323,
            "call": "patch()"
          },
          {
            "line": 428,
            "call": "patch()"
          },
          {
            "line": 455,
            "call": "patch()"
          },
          {
            "line": 478,
            "call": "patch()"
          },
          {
            "line": 501,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 21,
            "usage": "patch"
          },
          {
            "line": 21,
            "usage": "Mock"
          },
          {
            "line": 26,
            "usage": "patch"
          },
          {
            "line": 26,
            "usage": "Mock"
          },
          {
            "line": 38,
            "usage": "patch"
          },
          {
            "line": 33,
            "usage": "patch"
          },
          {
            "line": 50,
            "usage": "patch"
          },
          {
            "line": 45,
            "usage": "patch"
          },
          {
            "line": 65,
            "usage": "Mock"
          },
          {
            "line": 61,
            "usage": "patch"
          },
          {
            "line": 62,
            "usage": "patch"
          },
          {
            "line": 83,
            "usage": "Mock"
          },
          {
            "line": 79,
            "usage": "patch"
          },
          {
            "line": 80,
            "usage": "patch"
          },
          {
            "line": 97,
            "usage": "patch"
          },
          {
            "line": 92,
            "usage": "patch"
          },
          {
            "line": 125,
            "usage": "Mock"
          },
          {
            "line": 129,
            "usage": "Mock"
          },
          {
            "line": 132,
            "usage": "Mock"
          },
          {
            "line": 107,
            "usage": "patch"
          },
          {
            "line": 108,
            "usage": "patch"
          },
          {
            "line": 109,
            "usage": "patch"
          },
          {
            "line": 110,
            "usage": "patch"
          },
          {
            "line": 111,
            "usage": "patch"
          },
          {
            "line": 112,
            "usage": "patch"
          },
          {
            "line": 113,
            "usage": "patch"
          },
          {
            "line": 143,
            "usage": "patch"
          },
          {
            "line": 157,
            "usage": "Mock"
          },
          {
            "line": 163,
            "usage": "Mock"
          },
          {
            "line": 167,
            "usage": "Mock"
          },
          {
            "line": 170,
            "usage": "patch"
          },
          {
            "line": 152,
            "usage": "patch"
          },
          {
            "line": 182,
            "usage": "Mock"
          },
          {
            "line": 197,
            "usage": "Mock"
          },
          {
            "line": 201,
            "usage": "Mock"
          },
          {
            "line": 204,
            "usage": "patch"
          },
          {
            "line": 177,
            "usage": "patch"
          },
          {
            "line": 217,
            "usage": "patch"
          },
          {
            "line": 211,
            "usage": "patch"
          },
          {
            "line": 224,
            "usage": "patch"
          },
          {
            "line": 225,
            "usage": "patch"
          },
          {
            "line": 234,
            "usage": "patch"
          },
          {
            "line": 235,
            "usage": "patch"
          },
          {
            "line": 246,
            "usage": "patch"
          },
          {
            "line": 247,
            "usage": "patch"
          },
          {
            "line": 248,
            "usage": "patch"
          },
          {
            "line": 262,
            "usage": "patch"
          },
          {
            "line": 263,
            "usage": "patch"
          },
          {
            "line": 274,
            "usage": "patch"
          },
          {
            "line": 275,
            "usage": "patch"
          },
          {
            "line": 287,
            "usage": "patch"
          },
          {
            "line": 288,
            "usage": "patch"
          },
          {
            "line": 298,
            "usage": "patch"
          },
          {
            "line": 299,
            "usage": "patch"
          },
          {
            "line": 310,
            "usage": "patch"
          },
          {
            "line": 311,
            "usage": "patch"
          },
          {
            "line": 323,
            "usage": "patch"
          },
          {
            "line": 410,
            "usage": "Mock"
          },
          {
            "line": 414,
            "usage": "Mock"
          },
          {
            "line": 431,
            "usage": "Mock"
          },
          {
            "line": 435,
            "usage": "Mock"
          },
          {
            "line": 428,
            "usage": "patch"
          },
          {
            "line": 458,
            "usage": "Mock"
          },
          {
            "line": 462,
            "usage": "Mock"
          },
          {
            "line": 455,
            "usage": "patch"
          },
          {
            "line": 481,
            "usage": "Mock"
          },
          {
            "line": 485,
            "usage": "Mock"
          },
          {
            "line": 478,
            "usage": "patch"
          },
          {
            "line": 504,
            "usage": "Mock"
          },
          {
            "line": 508,
            "usage": "Mock"
          },
          {
            "line": 501,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 114,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_integration.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 3,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 3,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 3,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 14,
            "call": "patch()"
          },
          {
            "line": 246,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 14,
            "usage": "patch"
          },
          {
            "line": 15,
            "usage": "Mock"
          },
          {
            "line": 19,
            "usage": "MagicMock"
          },
          {
            "line": 23,
            "usage": "MagicMock"
          },
          {
            "line": 28,
            "usage": "Mock"
          },
          {
            "line": 32,
            "usage": "Mock"
          },
          {
            "line": 57,
            "usage": "Mock"
          },
          {
            "line": 59,
            "usage": "Mock"
          },
          {
            "line": 64,
            "usage": "Mock"
          },
          {
            "line": 67,
            "usage": "Mock"
          },
          {
            "line": 70,
            "usage": "Mock"
          },
          {
            "line": 74,
            "usage": "Mock"
          },
          {
            "line": 94,
            "usage": "Mock"
          },
          {
            "line": 141,
            "usage": "Mock"
          },
          {
            "line": 144,
            "usage": "Mock"
          },
          {
            "line": 147,
            "usage": "Mock"
          },
          {
            "line": 154,
            "usage": "Mock"
          },
          {
            "line": 157,
            "usage": "Mock"
          },
          {
            "line": 161,
            "usage": "Mock"
          },
          {
            "line": 171,
            "usage": "Mock"
          },
          {
            "line": 266,
            "usage": "Mock"
          },
          {
            "line": 269,
            "usage": "Mock"
          },
          {
            "line": 272,
            "usage": "Mock"
          },
          {
            "line": 275,
            "usage": "Mock"
          },
          {
            "line": 278,
            "usage": "Mock"
          },
          {
            "line": 282,
            "usage": "Mock"
          },
          {
            "line": 292,
            "usage": "Mock"
          },
          {
            "line": 246,
            "usage": "patch"
          }
        ],
        "trivial_computations": [
          {
            "line": 39,
            "function": "test_end_to_end_simple_function"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 34,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_credential_manager.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 7,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 7,
            "import": "from unittest.mock import mock_open"
          }
        ],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 38,
            "usage": "patch"
          },
          {
            "line": 86,
            "usage": "patch"
          },
          {
            "line": 108,
            "usage": "patch"
          },
          {
            "line": 128,
            "usage": "patch"
          },
          {
            "line": 136,
            "usage": "patch"
          },
          {
            "line": 140,
            "usage": "patch"
          },
          {
            "line": 194,
            "usage": "patch"
          },
          {
            "line": 213,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 10,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_cloud_providers_huggingface_spaces.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 2,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 2,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 2,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 34,
            "call": "patch()"
          },
          {
            "line": 35,
            "call": "patch()"
          },
          {
            "line": 53,
            "call": "patch()"
          },
          {
            "line": 71,
            "call": "patch()"
          },
          {
            "line": 72,
            "call": "patch()"
          },
          {
            "line": 84,
            "call": "patch()"
          },
          {
            "line": 85,
            "call": "patch()"
          },
          {
            "line": 97,
            "call": "patch()"
          },
          {
            "line": 98,
            "call": "patch()"
          },
          {
            "line": 112,
            "call": "patch()"
          },
          {
            "line": 113,
            "call": "patch()"
          },
          {
            "line": 164,
            "call": "patch()"
          },
          {
            "line": 155,
            "call": "patch()"
          },
          {
            "line": 196,
            "call": "patch()"
          },
          {
            "line": 220,
            "call": "patch()"
          },
          {
            "line": 239,
            "call": "patch()"
          },
          {
            "line": 731,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 23,
            "usage": "Mock"
          },
          {
            "line": 38,
            "usage": "Mock"
          },
          {
            "line": 34,
            "usage": "patch"
          },
          {
            "line": 35,
            "usage": "patch"
          },
          {
            "line": 53,
            "usage": "patch"
          },
          {
            "line": 75,
            "usage": "Mock"
          },
          {
            "line": 71,
            "usage": "patch"
          },
          {
            "line": 72,
            "usage": "patch"
          },
          {
            "line": 88,
            "usage": "Mock"
          },
          {
            "line": 84,
            "usage": "patch"
          },
          {
            "line": 85,
            "usage": "patch"
          },
          {
            "line": 103,
            "usage": "Mock"
          },
          {
            "line": 97,
            "usage": "patch"
          },
          {
            "line": 98,
            "usage": "patch"
          },
          {
            "line": 116,
            "usage": "Mock"
          },
          {
            "line": 112,
            "usage": "patch"
          },
          {
            "line": 113,
            "usage": "patch"
          },
          {
            "line": 164,
            "usage": "patch"
          },
          {
            "line": 155,
            "usage": "patch"
          },
          {
            "line": 196,
            "usage": "patch"
          },
          {
            "line": 220,
            "usage": "patch"
          },
          {
            "line": 239,
            "usage": "patch"
          },
          {
            "line": 286,
            "usage": "patch"
          },
          {
            "line": 334,
            "usage": "Mock"
          },
          {
            "line": 338,
            "usage": "Mock"
          },
          {
            "line": 354,
            "usage": "Mock"
          },
          {
            "line": 406,
            "usage": "Mock"
          },
          {
            "line": 411,
            "usage": "Mock"
          },
          {
            "line": 421,
            "usage": "Mock"
          },
          {
            "line": 426,
            "usage": "Mock"
          },
          {
            "line": 460,
            "usage": "Mock"
          },
          {
            "line": 501,
            "usage": "Mock"
          },
          {
            "line": 505,
            "usage": "Mock"
          },
          {
            "line": 532,
            "usage": "Mock"
          },
          {
            "line": 654,
            "usage": "Mock"
          },
          {
            "line": 671,
            "usage": "Mock"
          },
          {
            "line": 673,
            "usage": "Mock"
          },
          {
            "line": 691,
            "usage": "Mock"
          },
          {
            "line": 703,
            "usage": "Mock"
          },
          {
            "line": 716,
            "usage": "Mock"
          },
          {
            "line": 731,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 61,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_cloud_providers_aws_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 17,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 17,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 17,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 97,
            "call": "patch()"
          },
          {
            "line": 98,
            "call": "patch()"
          },
          {
            "line": 444,
            "call": "patch()"
          },
          {
            "line": 445,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 37,
            "usage": "Mock"
          },
          {
            "line": 38,
            "usage": "Mock"
          },
          {
            "line": 39,
            "usage": "Mock"
          },
          {
            "line": 111,
            "usage": "Mock"
          },
          {
            "line": 113,
            "usage": "Mock"
          },
          {
            "line": 97,
            "usage": "patch"
          },
          {
            "line": 98,
            "usage": "patch"
          },
          {
            "line": 202,
            "usage": "Mock"
          },
          {
            "line": 205,
            "usage": "Mock"
          },
          {
            "line": 293,
            "usage": "Mock"
          },
          {
            "line": 449,
            "usage": "Mock"
          },
          {
            "line": 451,
            "usage": "Mock"
          },
          {
            "line": 452,
            "usage": "Mock"
          },
          {
            "line": 456,
            "usage": "Mock"
          },
          {
            "line": 444,
            "usage": "patch"
          },
          {
            "line": 445,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 23,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_enhanced_features.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 5,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 5,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 22,
            "call": "patch()"
          },
          {
            "line": 52,
            "call": "patch()"
          },
          {
            "line": 73,
            "call": "patch()"
          },
          {
            "line": 96,
            "call": "patch()"
          },
          {
            "line": 97,
            "call": "patch()"
          },
          {
            "line": 129,
            "call": "patch()"
          },
          {
            "line": 148,
            "call": "patch()"
          },
          {
            "line": 162,
            "call": "patch()"
          },
          {
            "line": 171,
            "call": "patch()"
          },
          {
            "line": 180,
            "call": "patch()"
          },
          {
            "line": 191,
            "call": "patch()"
          },
          {
            "line": 202,
            "call": "patch()"
          },
          {
            "line": 203,
            "call": "patch()"
          },
          {
            "line": 237,
            "call": "patch()"
          },
          {
            "line": 282,
            "call": "patch()"
          },
          {
            "line": 510,
            "call": "patch()"
          },
          {
            "line": 532,
            "call": "patch()"
          },
          {
            "line": 533,
            "call": "patch()"
          },
          {
            "line": 555,
            "call": "patch()"
          },
          {
            "line": 556,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 26,
            "usage": "Mock"
          },
          {
            "line": 22,
            "usage": "patch"
          },
          {
            "line": 56,
            "usage": "Mock"
          },
          {
            "line": 52,
            "usage": "patch"
          },
          {
            "line": 76,
            "usage": "Mock"
          },
          {
            "line": 73,
            "usage": "patch"
          },
          {
            "line": 103,
            "usage": "Mock"
          },
          {
            "line": 108,
            "usage": "Mock"
          },
          {
            "line": 110,
            "usage": "Mock"
          },
          {
            "line": 96,
            "usage": "patch"
          },
          {
            "line": 97,
            "usage": "patch"
          },
          {
            "line": 132,
            "usage": "Mock"
          },
          {
            "line": 129,
            "usage": "patch"
          },
          {
            "line": 151,
            "usage": "Mock"
          },
          {
            "line": 148,
            "usage": "patch"
          },
          {
            "line": 162,
            "usage": "patch"
          },
          {
            "line": 171,
            "usage": "patch"
          },
          {
            "line": 180,
            "usage": "patch"
          },
          {
            "line": 191,
            "usage": "patch"
          },
          {
            "line": 202,
            "usage": "patch"
          },
          {
            "line": 203,
            "usage": "patch"
          },
          {
            "line": 243,
            "usage": "Mock"
          },
          {
            "line": 244,
            "usage": "Mock"
          },
          {
            "line": 248,
            "usage": "Mock"
          },
          {
            "line": 249,
            "usage": "Mock"
          },
          {
            "line": 250,
            "usage": "Mock"
          },
          {
            "line": 251,
            "usage": "Mock"
          },
          {
            "line": 255,
            "usage": "Mock"
          },
          {
            "line": 256,
            "usage": "Mock"
          },
          {
            "line": 257,
            "usage": "Mock"
          },
          {
            "line": 237,
            "usage": "patch"
          },
          {
            "line": 288,
            "usage": "Mock"
          },
          {
            "line": 289,
            "usage": "Mock"
          },
          {
            "line": 291,
            "usage": "Mock"
          },
          {
            "line": 292,
            "usage": "Mock"
          },
          {
            "line": 293,
            "usage": "Mock"
          },
          {
            "line": 294,
            "usage": "Mock"
          },
          {
            "line": 298,
            "usage": "Mock"
          },
          {
            "line": 299,
            "usage": "Mock"
          },
          {
            "line": 300,
            "usage": "Mock"
          },
          {
            "line": 282,
            "usage": "patch"
          },
          {
            "line": 329,
            "usage": "Mock"
          },
          {
            "line": 330,
            "usage": "Mock"
          },
          {
            "line": 332,
            "usage": "Mock"
          },
          {
            "line": 333,
            "usage": "Mock"
          },
          {
            "line": 334,
            "usage": "Mock"
          },
          {
            "line": 335,
            "usage": "Mock"
          },
          {
            "line": 339,
            "usage": "Mock"
          },
          {
            "line": 340,
            "usage": "Mock"
          },
          {
            "line": 341,
            "usage": "Mock"
          },
          {
            "line": 510,
            "usage": "patch"
          },
          {
            "line": 540,
            "usage": "Mock"
          },
          {
            "line": 532,
            "usage": "patch"
          },
          {
            "line": 533,
            "usage": "patch"
          },
          {
            "line": 555,
            "usage": "patch"
          },
          {
            "line": 556,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 78,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_reference_workflows.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 36,
            "function": "test_basic_workflows_local"
          },
          {
            "line": 46,
            "function": "test_data_analysis_workflows_local"
          },
          {
            "line": 60,
            "function": "test_kubernetes_workflows"
          },
          {
            "line": 73,
            "function": "test_slurm_workflows"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 4,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_executor_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 12,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 12,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 12,
            "import": "from unittest.mock import MagicMock"
          },
          {
            "line": 12,
            "import": "from unittest.mock import mock_open"
          }
        ],
        "patch_decorators": [
          {
            "line": 39,
            "call": "patch()"
          },
          {
            "line": 86,
            "call": "patch()"
          },
          {
            "line": 86,
            "call": "patch()"
          },
          {
            "line": 88,
            "call": "patch()"
          },
          {
            "line": 88,
            "call": "patch()"
          },
          {
            "line": 107,
            "call": "patch()"
          },
          {
            "line": 107,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 39,
            "usage": "patch"
          },
          {
            "line": 40,
            "usage": "Mock"
          },
          {
            "line": 42,
            "usage": "Mock"
          },
          {
            "line": 68,
            "usage": "Mock"
          },
          {
            "line": 69,
            "usage": "Mock"
          },
          {
            "line": 86,
            "usage": "patch"
          },
          {
            "line": 86,
            "usage": "patch"
          },
          {
            "line": 88,
            "usage": "patch"
          },
          {
            "line": 88,
            "usage": "patch"
          },
          {
            "line": 89,
            "usage": "Mock"
          },
          {
            "line": 93,
            "usage": "Mock"
          },
          {
            "line": 94,
            "usage": "Mock"
          },
          {
            "line": 107,
            "usage": "patch"
          },
          {
            "line": 107,
            "usage": "patch"
          },
          {
            "line": 108,
            "usage": "Mock"
          },
          {
            "line": 109,
            "usage": "Mock"
          },
          {
            "line": 120,
            "usage": "Mock"
          },
          {
            "line": 132,
            "usage": "Mock"
          },
          {
            "line": 142,
            "usage": "Mock"
          },
          {
            "line": 143,
            "usage": "Mock"
          },
          {
            "line": 161,
            "usage": "Mock"
          },
          {
            "line": 166,
            "usage": "Mock"
          },
          {
            "line": 175,
            "usage": "Mock"
          },
          {
            "line": 176,
            "usage": "Mock"
          },
          {
            "line": 187,
            "usage": "Mock"
          },
          {
            "line": 199,
            "usage": "Mock"
          },
          {
            "line": 200,
            "usage": "Mock"
          },
          {
            "line": 201,
            "usage": "Mock"
          },
          {
            "line": 224,
            "usage": "Mock"
          },
          {
            "line": 226,
            "usage": "Mock"
          },
          {
            "line": 236,
            "usage": "Mock"
          },
          {
            "line": 244,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 43,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_kubernetes_integration.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 4,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 4,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 31,
            "call": "patch()"
          },
          {
            "line": 74,
            "call": "patch()"
          },
          {
            "line": 66,
            "call": "patch()"
          },
          {
            "line": 111,
            "call": "patch()"
          },
          {
            "line": 128,
            "call": "patch()"
          },
          {
            "line": 147,
            "call": "patch()"
          },
          {
            "line": 174,
            "call": "patch()"
          },
          {
            "line": 231,
            "call": "patch()"
          },
          {
            "line": 236,
            "call": "patch()"
          },
          {
            "line": 257,
            "call": "patch()"
          },
          {
            "line": 262,
            "call": "patch()"
          },
          {
            "line": 283,
            "call": "patch()"
          },
          {
            "line": 288,
            "call": "patch()"
          },
          {
            "line": 314,
            "call": "patch()"
          },
          {
            "line": 321,
            "call": "patch()"
          },
          {
            "line": 326,
            "call": "patch()"
          },
          {
            "line": 428,
            "call": "patch()"
          },
          {
            "line": 429,
            "call": "patch()"
          },
          {
            "line": 453,
            "call": "patch()"
          },
          {
            "line": 454,
            "call": "patch()"
          },
          {
            "line": 472,
            "call": "patch()"
          },
          {
            "line": 473,
            "call": "patch()"
          },
          {
            "line": 498,
            "call": "patch()"
          },
          {
            "line": 499,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 31,
            "usage": "patch"
          },
          {
            "line": 33,
            "usage": "Mock"
          },
          {
            "line": 37,
            "usage": "Mock"
          },
          {
            "line": 42,
            "usage": "Mock"
          },
          {
            "line": 49,
            "usage": "Mock"
          },
          {
            "line": 53,
            "usage": "Mock"
          },
          {
            "line": 57,
            "usage": "Mock"
          },
          {
            "line": 74,
            "usage": "patch"
          },
          {
            "line": 66,
            "usage": "patch"
          },
          {
            "line": 111,
            "usage": "patch"
          },
          {
            "line": 128,
            "usage": "patch"
          },
          {
            "line": 147,
            "usage": "patch"
          },
          {
            "line": 174,
            "usage": "patch"
          },
          {
            "line": 231,
            "usage": "patch"
          },
          {
            "line": 236,
            "usage": "patch"
          },
          {
            "line": 257,
            "usage": "patch"
          },
          {
            "line": 262,
            "usage": "patch"
          },
          {
            "line": 283,
            "usage": "patch"
          },
          {
            "line": 288,
            "usage": "patch"
          },
          {
            "line": 314,
            "usage": "patch"
          },
          {
            "line": 321,
            "usage": "patch"
          },
          {
            "line": 326,
            "usage": "patch"
          },
          {
            "line": 418,
            "usage": "patch"
          },
          {
            "line": 428,
            "usage": "patch"
          },
          {
            "line": 429,
            "usage": "patch"
          },
          {
            "line": 453,
            "usage": "patch"
          },
          {
            "line": 454,
            "usage": "patch"
          },
          {
            "line": 456,
            "usage": "Mock"
          },
          {
            "line": 472,
            "usage": "patch"
          },
          {
            "line": 473,
            "usage": "patch"
          },
          {
            "line": 475,
            "usage": "Mock"
          },
          {
            "line": 477,
            "usage": "Mock"
          },
          {
            "line": 509,
            "usage": "Mock"
          },
          {
            "line": 510,
            "usage": "Mock"
          },
          {
            "line": 515,
            "usage": "Mock"
          },
          {
            "line": 520,
            "usage": "Mock"
          },
          {
            "line": 527,
            "usage": "Mock"
          },
          {
            "line": 531,
            "usage": "Mock"
          },
          {
            "line": 498,
            "usage": "patch"
          },
          {
            "line": 499,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 66,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_loop_analysis.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/test_cli.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 3,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 3,
            "import": "from unittest.mock import Mock"
          }
        ],
        "patch_decorators": [
          {
            "line": 25,
            "call": "patch()"
          },
          {
            "line": 45,
            "call": "patch()"
          },
          {
            "line": 46,
            "call": "patch()"
          },
          {
            "line": 84,
            "call": "patch()"
          },
          {
            "line": 92,
            "call": "patch()"
          },
          {
            "line": 103,
            "call": "patch()"
          },
          {
            "line": 113,
            "call": "patch()"
          },
          {
            "line": 123,
            "call": "patch()"
          },
          {
            "line": 124,
            "call": "patch()"
          },
          {
            "line": 138,
            "call": "patch()"
          },
          {
            "line": 139,
            "call": "patch()"
          },
          {
            "line": 163,
            "call": "patch()"
          },
          {
            "line": 164,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 25,
            "usage": "patch"
          },
          {
            "line": 45,
            "usage": "patch"
          },
          {
            "line": 46,
            "usage": "patch"
          },
          {
            "line": 84,
            "usage": "patch"
          },
          {
            "line": 92,
            "usage": "patch"
          },
          {
            "line": 103,
            "usage": "patch"
          },
          {
            "line": 113,
            "usage": "patch"
          },
          {
            "line": 123,
            "usage": "patch"
          },
          {
            "line": 124,
            "usage": "patch"
          },
          {
            "line": 148,
            "usage": "Mock"
          },
          {
            "line": 138,
            "usage": "patch"
          },
          {
            "line": 139,
            "usage": "patch"
          },
          {
            "line": 175,
            "usage": "Mock"
          },
          {
            "line": 163,
            "usage": "patch"
          },
          {
            "line": 164,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 30,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_cloud_providers_aws.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 3,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 3,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 3,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 41,
            "call": "patch()"
          },
          {
            "line": 42,
            "call": "patch()"
          },
          {
            "line": 82,
            "call": "patch()"
          },
          {
            "line": 83,
            "call": "patch()"
          },
          {
            "line": 102,
            "call": "patch()"
          },
          {
            "line": 120,
            "call": "patch()"
          },
          {
            "line": 121,
            "call": "patch()"
          },
          {
            "line": 139,
            "call": "patch()"
          },
          {
            "line": 140,
            "call": "patch()"
          },
          {
            "line": 160,
            "call": "patch()"
          },
          {
            "line": 161,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 23,
            "usage": "Mock"
          },
          {
            "line": 24,
            "usage": "Mock"
          },
          {
            "line": 25,
            "usage": "Mock"
          },
          {
            "line": 46,
            "usage": "Mock"
          },
          {
            "line": 49,
            "usage": "Mock"
          },
          {
            "line": 50,
            "usage": "Mock"
          },
          {
            "line": 51,
            "usage": "Mock"
          },
          {
            "line": 41,
            "usage": "patch"
          },
          {
            "line": 42,
            "usage": "patch"
          },
          {
            "line": 86,
            "usage": "Mock"
          },
          {
            "line": 89,
            "usage": "Mock"
          },
          {
            "line": 82,
            "usage": "patch"
          },
          {
            "line": 83,
            "usage": "patch"
          },
          {
            "line": 102,
            "usage": "patch"
          },
          {
            "line": 126,
            "usage": "Mock"
          },
          {
            "line": 128,
            "usage": "Mock"
          },
          {
            "line": 120,
            "usage": "patch"
          },
          {
            "line": 121,
            "usage": "patch"
          },
          {
            "line": 145,
            "usage": "Mock"
          },
          {
            "line": 147,
            "usage": "Mock"
          },
          {
            "line": 139,
            "usage": "patch"
          },
          {
            "line": 140,
            "usage": "patch"
          },
          {
            "line": 164,
            "usage": "Mock"
          },
          {
            "line": 166,
            "usage": "Mock"
          },
          {
            "line": 160,
            "usage": "patch"
          },
          {
            "line": 161,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 40,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/test_decorator.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 2,
            "import": "from unittest.mock import Mock"
          },
          {
            "line": 2,
            "import": "from unittest.mock import patch"
          },
          {
            "line": 2,
            "import": "from unittest.mock import MagicMock"
          }
        ],
        "patch_decorators": [
          {
            "line": 70,
            "call": "patch()"
          },
          {
            "line": 83,
            "call": "patch()"
          },
          {
            "line": 84,
            "call": "patch()"
          },
          {
            "line": 120,
            "call": "patch()"
          },
          {
            "line": 150,
            "call": "patch()"
          },
          {
            "line": 290,
            "call": "patch()"
          },
          {
            "line": 313,
            "call": "patch()"
          },
          {
            "line": 314,
            "call": "patch()"
          },
          {
            "line": 371,
            "call": "patch()"
          },
          {
            "line": 372,
            "call": "patch()"
          },
          {
            "line": 373,
            "call": "patch()"
          },
          {
            "line": 399,
            "call": "patch()"
          },
          {
            "line": 400,
            "call": "patch()"
          },
          {
            "line": 428,
            "call": "patch()"
          },
          {
            "line": 449,
            "call": "patch()"
          },
          {
            "line": 450,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 70,
            "usage": "patch"
          },
          {
            "line": 83,
            "usage": "patch"
          },
          {
            "line": 84,
            "usage": "patch"
          },
          {
            "line": 125,
            "usage": "Mock"
          },
          {
            "line": 120,
            "usage": "patch"
          },
          {
            "line": 155,
            "usage": "Mock"
          },
          {
            "line": 150,
            "usage": "patch"
          },
          {
            "line": 294,
            "usage": "Mock"
          },
          {
            "line": 296,
            "usage": "Mock"
          },
          {
            "line": 290,
            "usage": "patch"
          },
          {
            "line": 318,
            "usage": "Mock"
          },
          {
            "line": 320,
            "usage": "Mock"
          },
          {
            "line": 313,
            "usage": "patch"
          },
          {
            "line": 314,
            "usage": "patch"
          },
          {
            "line": 383,
            "usage": "Mock"
          },
          {
            "line": 371,
            "usage": "patch"
          },
          {
            "line": 372,
            "usage": "patch"
          },
          {
            "line": 373,
            "usage": "patch"
          },
          {
            "line": 406,
            "usage": "Mock"
          },
          {
            "line": 399,
            "usage": "patch"
          },
          {
            "line": 400,
            "usage": "patch"
          },
          {
            "line": 428,
            "usage": "patch"
          },
          {
            "line": 456,
            "usage": "Mock"
          },
          {
            "line": 460,
            "usage": "Mock"
          },
          {
            "line": 449,
            "usage": "patch"
          },
          {
            "line": 450,
            "usage": "patch"
          },
          {
            "line": 532,
            "usage": "Mock"
          },
          {
            "line": 549,
            "usage": "Mock"
          },
          {
            "line": 612,
            "usage": "Mock"
          }
        ],
        "trivial_computations": [
          {
            "line": 11,
            "function": "test_basic_decoration"
          },
          {
            "line": 15,
            "function": "test_func"
          },
          {
            "line": 71,
            "function": "test_local_execution_with_cluster_none"
          },
          {
            "line": 76,
            "function": "test_func"
          },
          {
            "line": 85,
            "function": "test_remote_execution"
          },
          {
            "line": 93,
            "function": "test_func"
          },
          {
            "line": 109,
            "function": "test_function_metadata_preserved"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [
          {
            "line": 27,
            "function": "test_func"
          },
          {
            "line": 130,
            "function": "test_func"
          }
        ],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 55,
      "good_pattern_count": 2,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/real_world/test_kubernetes_huggingface_integration.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm_script.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 14,
            "function": "test_generate_slurm_script_for_ndoli"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_tensor01_gpu_simple.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 12,
            "function": "test_tensor01_basic_gpu_detection"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_with_module_loads.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 13,
            "function": "test_ndoli_slurm_with_module_loads"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_cloud_integration_complete.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 12,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [
          {
            "line": 333,
            "call": "patch()"
          }
        ],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [
          {
            "line": 75,
            "usage": "patch"
          },
          {
            "line": 78,
            "usage": "patch"
          },
          {
            "line": 79,
            "usage": "patch"
          },
          {
            "line": 147,
            "usage": "patch"
          },
          {
            "line": 148,
            "usage": "patch"
          },
          {
            "line": 333,
            "usage": "patch"
          },
          {
            "line": 386,
            "usage": "patch"
          }
        ],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 9,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "high"
    },
    {
      "file": "tests/real_world/test_field_mapping_validation.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 82,
            "function": "test_field_mapping_system_completeness"
          },
          {
            "line": 116,
            "function": "test_aws_field_mapping_with_real_api"
          },
          {
            "line": 152,
            "function": "test_gcp_field_mapping_with_real_api"
          },
          {
            "line": 191,
            "function": "test_huggingface_field_mapping_with_real_api"
          },
          {
            "line": 227,
            "function": "test_lambda_field_mapping_consistency"
          },
          {
            "line": 249,
            "function": "test_end_to_end_widget_to_provider_flow"
          },
          {
            "line": 321,
            "function": "test_error_handling_with_invalid_credentials"
          },
          {
            "line": 363,
            "function": "test_missing_required_fields_validation"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 8,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm_debug.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_ndoli_slurm_availability"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm_logs.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 12,
            "function": "test_check_slurm_job_logs"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_check_latest_job.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_check_latest_slurm_job"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_aws_provisioning.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_slurm_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 115,
            "function": "test_slurm_simple_function_execution"
          },
          {
            "line": 185,
            "function": "test_slurm_error_handling_and_recovery"
          },
          {
            "line": 221,
            "function": "test_slurm_file_system_delay_handling"
          },
          {
            "line": 256,
            "function": "test_slurm_concurrent_jobs"
          },
          {
            "line": 304,
            "function": "test_slurm_resource_specification"
          },
          {
            "line": 347,
            "function": "test_slurm_job_cancellation"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 6,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_core_functionality_tensor01.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 21,
            "function": "test_tensor01_core_functionality"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_aws_pricing_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/conftest.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_lambda_integration.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_direct_cloud_compute_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 273,
            "function": "test_aws_ec2_access_validation"
          },
          {
            "line": 298,
            "function": "test_azure_vm_access_validation"
          },
          {
            "line": 319,
            "function": "test_gcp_compute_access_validation"
          },
          {
            "line": 340,
            "function": "test_aws_batch_service_validation"
          },
          {
            "line": 384,
            "function": "test_azure_container_instances_validation"
          },
          {
            "line": 426,
            "function": "test_gcp_cloud_run_validation"
          },
          {
            "line": 470,
            "function": "test_multi_cloud_compute_compatibility"
          },
          {
            "line": 522,
            "function": "test_cloud_compute_pricing_integration"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 8,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm_logs_detailed.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_check_detailed_slurm_logs"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_aws_execution_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_job_submission_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 51,
            "function": "test_simple_function_k8s_submission"
          },
          {
            "line": 72,
            "function": "test_function_with_k8s_environment"
          },
          {
            "line": 108,
            "function": "test_k8s_resource_specification"
          },
          {
            "line": 144,
            "function": "test_k8s_namespace_isolation"
          },
          {
            "line": 178,
            "function": "test_k8s_persistent_storage"
          },
          {
            "line": 236,
            "function": "test_k8s_networking"
          },
          {
            "line": 282,
            "function": "test_k8s_secrets_and_configmaps"
          },
          {
            "line": 340,
            "function": "test_k8s_parallel_processing"
          },
          {
            "line": 410,
            "function": "test_k8s_job_lifecycle"
          },
          {
            "line": 460,
            "function": "test_k8s_error_handling"
          },
          {
            "line": 501,
            "function": "test_k8s_resource_intensive"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 11,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_tensor01_cuda_verified.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 15,
            "function": "test_tensor01_gpu_detection_verified"
          },
          {
            "line": 89,
            "function": "test_tensor01_pytorch_cuda_verified"
          },
          {
            "line": 172,
            "function": "test_tensor01_simple_gpu_computation_verified"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 3,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_tensor01_gpu_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 14,
            "function": "test_tensor01_8_gpu_detection_simple"
          },
          {
            "line": 71,
            "function": "test_tensor01_gpu_multi_access"
          },
          {
            "line": 159,
            "function": "test_tensor01_auto_gpu_parallelization_simple"
          },
          {
            "line": 241,
            "function": "test_tensor01_function_flattening_integration"
          },
          {
            "line": 340,
            "function": "test_tensor01_gpu_parallel_with_verification"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 5,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_cloud_apis_real.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 13,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/real_world/test_kubernetes_azure_provisioning.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_azure_pricing_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_tensor01_gpu_functionality.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 21,
            "function": "test_tensor01_cuda_detection"
          },
          {
            "line": 302,
            "function": "test_tensor01_single_gpu_computation"
          },
          {
            "line": 495,
            "function": "test_tensor01_dual_gpu_computation"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 3,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_end_to_end_execution.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_tensor01_auto_gpu_parallel.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 14,
            "function": "test_tensor01_auto_gpu_parallelization"
          },
          {
            "line": 117,
            "function": "test_tensor01_gpu_parallel_verification"
          },
          {
            "line": 210,
            "function": "test_tensor01_gpu_environment_check"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 3,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_pbs_job_submission_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 45,
            "function": "test_simple_function_pbs_submission"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 45,
            "function": "test_simple_function_pbs_submission"
          },
          {
            "line": 61,
            "function": "test_function_with_pbs_environment"
          },
          {
            "line": 91,
            "function": "test_function_with_queue_specification_pbs"
          },
          {
            "line": 114,
            "function": "test_pbs_node_file_processing"
          },
          {
            "line": 150,
            "function": "test_pbs_array_job_simulation"
          },
          {
            "line": 190,
            "function": "test_pbs_resource_monitoring"
          },
          {
            "line": 232,
            "function": "test_pbs_file_staging"
          },
          {
            "line": 296,
            "function": "test_pbs_error_handling"
          },
          {
            "line": 334,
            "function": "test_pbs_long_running_job"
          },
          {
            "line": 378,
            "function": "test_pbs_job_cleanup"
          },
          {
            "line": 426,
            "function": "test_pbs_parallel_processing"
          }
        ]
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 11,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/real_world/test_examine_failing_slurm.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_examine_failing_slurm_job"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_ndoli_slurm_job_submission"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_complex_code_analysis.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_end_to_end_billing.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ssh_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm_working.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_ndoli_slurm_working"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_slurm_env.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 16,
            "function": "test_ndoli_slurm_environment_setup"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_filesystem_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_performance_benchmarks.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_venv_check.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_check_venv_versions"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_cross_provider_accuracy.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_core_functionality_ndoli.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 21,
            "function": "test_ndoli_core_functionality"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 129,
            "function": "test_kubernetes_simple_function_execution"
          },
          {
            "line": 200,
            "function": "test_kubernetes_error_handling_and_recovery"
          },
          {
            "line": 237,
            "function": "test_kubernetes_resource_specification"
          },
          {
            "line": 294,
            "function": "test_kubernetes_concurrent_jobs"
          },
          {
            "line": 344,
            "function": "test_kubernetes_dependency_handling"
          },
          {
            "line": 394,
            "function": "test_kubernetes_job_status_tracking"
          },
          {
            "line": 455,
            "function": "test_kubernetes_job_cleanup_and_ttl"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 7,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_lambda_cloud_execution_real.py",
      "anti_patterns": {
        "mock_usage": [
          {
            "line": 11,
            "import": "from unittest.mock import patch"
          }
        ],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/real_world/test_sge_job_submission_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 45,
            "function": "test_simple_function_sge_submission"
          },
          {
            "line": 63,
            "function": "test_function_with_sge_environment"
          },
          {
            "line": 96,
            "function": "test_sge_parallel_environment"
          },
          {
            "line": 141,
            "function": "test_sge_queue_specification"
          },
          {
            "line": 165,
            "function": "test_sge_array_job_simulation"
          },
          {
            "line": 206,
            "function": "test_sge_resource_limits"
          },
          {
            "line": 247,
            "function": "test_sge_file_operations"
          },
          {
            "line": 325,
            "function": "test_sge_error_handling"
          },
          {
            "line": 362,
            "function": "test_sge_job_dependencies"
          },
          {
            "line": 411,
            "function": "test_sge_compute_intensive"
          },
          {
            "line": 458,
            "function": "test_sge_job_monitoring"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 11,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_container_registry_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 200,
            "function": "test_default_python_image_accessibility"
          },
          {
            "line": 222,
            "function": "test_alternative_python_images_compatibility"
          },
          {
            "line": 264,
            "function": "test_cloudpickle_dependency_in_containers"
          },
          {
            "line": 333,
            "function": "test_registry_authentication_docker_hub"
          },
          {
            "line": 374,
            "function": "test_kubernetes_with_custom_images"
          },
          {
            "line": 420,
            "function": "test_image_pull_policies_and_caching"
          },
          {
            "line": 492,
            "function": "test_container_runtime_environment_validation"
          },
          {
            "line": 573,
            "function": "test_multi_registry_compatibility"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 8,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_automatic_gpu_parallelization.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_visual_verification.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_debug_correct_path.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 14,
            "function": "test_debug_slurm_with_correct_config"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_cluster_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 67,
            "function": "test_ndoli_ssh_advanced_auth"
          },
          {
            "line": 159,
            "function": "test_ndoli_slurm_job_submission"
          },
          {
            "line": 251,
            "function": "test_ndoli_parallel_slurm_execution"
          },
          {
            "line": 312,
            "function": "test_ndoli_gpu_awareness"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 4,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_multi_provider_integration.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_tensor01_gpu_detection.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 13,
            "function": "test_tensor01_8_gpu_detection"
          },
          {
            "line": 100,
            "function": "test_tensor01_gpu_accessibility"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 2,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_production_deployment_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 245,
            "function": "test_package_build_system"
          },
          {
            "line": 282,
            "function": "test_pyproject_toml_validation"
          },
          {
            "line": 327,
            "function": "test_documentation_build_system"
          },
          {
            "line": 355,
            "function": "test_github_actions_workflow_syntax"
          },
          {
            "line": 399,
            "function": "test_github_repository_integration"
          },
          {
            "line": 469,
            "function": "test_pypi_publishing_readiness"
          },
          {
            "line": 539,
            "function": "test_release_automation_components"
          },
          {
            "line": 595,
            "function": "test_continuous_integration_health"
          },
          {
            "line": 655,
            "function": "test_dependency_security_scanning"
          },
          {
            "line": 717,
            "function": "test_packaging_best_practices"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 10,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_slurm_job_submission_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 44,
            "function": "test_simple_function_slurm_submission"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 44,
            "function": "test_simple_function_slurm_submission"
          },
          {
            "line": 60,
            "function": "test_function_with_dependencies_slurm"
          },
          {
            "line": 98,
            "function": "test_function_with_environment_info_slurm"
          },
          {
            "line": 126,
            "function": "test_function_with_file_io_slurm"
          },
          {
            "line": 194,
            "function": "test_function_with_error_handling_slurm"
          },
          {
            "line": 213,
            "function": "test_parallel_loop_slurm"
          },
          {
            "line": 240,
            "function": "test_function_with_different_partitions_slurm"
          },
          {
            "line": 264,
            "function": "test_memory_intensive_slurm"
          },
          {
            "line": 310,
            "function": "test_job_status_monitoring_slurm"
          },
          {
            "line": 348,
            "function": "test_multiple_job_submission_slurm"
          },
          {
            "line": 384,
            "function": "test_job_resource_validation_slurm"
          }
        ]
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 11,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/real_world/test_gcp_pricing_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_lambda_pricing_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_workflow_simple.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_run_actual_job_script"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_debug.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_ndoli_simple_debug"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ssh_job_execution_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 46,
            "function": "test_simple_function_ssh_execution"
          },
          {
            "line": 67,
            "function": "test_function_with_ssh_environment"
          },
          {
            "line": 102,
            "function": "test_ssh_file_operations"
          },
          {
            "line": 188,
            "function": "test_ssh_system_commands"
          },
          {
            "line": 254,
            "function": "test_ssh_python_environment"
          },
          {
            "line": 337,
            "function": "test_ssh_parallel_execution"
          },
          {
            "line": 395,
            "function": "test_ssh_error_handling"
          },
          {
            "line": 441,
            "function": "test_ssh_resource_monitoring"
          },
          {
            "line": 498,
            "function": "test_ssh_long_running_job"
          },
          {
            "line": 553,
            "function": "test_ssh_network_operations"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 10,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_gcp_provisioning.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_kubernetes_local_execution.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_find_actual_slurm_jobs.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_find_actual_slurm_jobs"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_full_manual.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_full_manual_workflow"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_advanced_schedulers_comprehensive.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 184,
            "function": "test_pbs_job_submission_basic"
          },
          {
            "line": 204,
            "function": "test_sge_job_submission_basic"
          },
          {
            "line": 224,
            "function": "test_slurm_advanced_features"
          },
          {
            "line": 296,
            "function": "test_scheduler_resource_specifications"
          },
          {
            "line": 361,
            "function": "test_scheduler_queue_systems"
          },
          {
            "line": 444,
            "function": "test_scheduler_job_monitoring"
          },
          {
            "line": 509,
            "function": "test_scheduler_environment_variables"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 7,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/real_world/test_ndoli_script_debug.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 11,
            "function": "test_debug_slurm_script"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/comprehensive/test_serialization_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 351,
            "function": "test_lambda_serialization_workaround"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 0,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/comprehensive/test_edge_cases_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [
          {
            "line": 84,
            "function": "test_nested_function_serialization"
          }
        ],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 326,
            "function": "test_connection_timeout"
          },
          {
            "line": 351,
            "function": "test_intermittent_connection"
          }
        ]
      },
      "anti_pattern_count": 1,
      "good_pattern_count": 2,
      "needs_refactoring": true,
      "priority": "medium"
    },
    {
      "file": "tests/comprehensive/test_failure_recovery_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 27,
            "function": "test_ssh_connection_drop_recovery"
          },
          {
            "line": 125,
            "function": "test_cluster_unavailable_recovery"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 2,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/comprehensive/test_performance_benchmarks_real.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": [
          {
            "line": 137,
            "function": "test_remote_submission_performance"
          }
        ]
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 1,
      "needs_refactoring": false,
      "priority": "low"
    },
    {
      "file": "tests/infrastructure/setup_test_infrastructure.py",
      "anti_patterns": {
        "mock_usage": [],
        "patch_decorators": [],
        "exec_usage": [],
        "string_functions": [],
        "magic_mock": [],
        "trivial_computations": [],
        "missing_cluster_decorator": []
      },
      "good_patterns": {
        "real_cluster_decorator": [],
        "real_config": [],
        "meaningful_computation": [],
        "real_world_marked": []
      },
      "anti_pattern_count": 0,
      "good_pattern_count": 0,
      "needs_refactoring": false,
      "priority": "low"
    }
  ]
}